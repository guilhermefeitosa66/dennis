[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring BlazeDS Integration Hibernate4 1.6.0.BUILD-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spring-flex-hibernate4 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/guilherme/spring-projects/maven/spring-flex/spring-flex-hibernate4/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ spring-flex-hibernate4 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spring-flex-hibernate4 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 40 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ spring-flex-hibernate4 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ spring-flex-hibernate4 ---
[INFO] Surefire report directory: /home/guilherme/spring-projects/maven/spring-flex/spring-flex-hibernate4/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@27c20538, org.springframework.test.context.transaction.TransactionalTestExecutionListener@72d818d1, org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests$InternalDbTestExecutionListener@6e06451e]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-context.xml]
INFO : org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@6536e911: startup date [Fri Mar 03 10:59:07 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
INFO : org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
INFO : org.hibernate.Version - HHH000412: Hibernate Core {4.3.5.Final}
INFO : org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO : org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "BUILDINGNP_FLOORS" not found; SQL statement:
alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "BUILDING_FLOORS" not found; SQL statement:
alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON" not found; SQL statement:
alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON" not found; SQL statement:
alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP" not found; SQL statement:
alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP" not found; SQL statement:
alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_ADDRESSNP" not found; SQL statement:
alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_ADDRESSNP" not found; SQL statement:
alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_PERSONNP" not found; SQL statement:
alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_PERSONNP" not found; SQL statement:
alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_ADDRESS" not found; SQL statement:
alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_ADDRESS" not found; SQL statement:
alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_PERSON" not found; SQL statement:
alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_PERSON" not found; SQL statement:
alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists [42102-180]
DEBUG: org.hibernate.SQL - drop table Address if exists
DEBUG: org.hibernate.SQL - drop table AddressNP if exists
DEBUG: org.hibernate.SQL - drop table BillingDetails if exists
DEBUG: org.hibernate.SQL - drop table Building if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP_floors if exists
DEBUG: org.hibernate.SQL - drop table Building_floors if exists
DEBUG: org.hibernate.SQL - drop table Company if exists
DEBUG: org.hibernate.SQL - drop table CompanyNP if exists
DEBUG: org.hibernate.SQL - drop table ContactInfo if exists
DEBUG: org.hibernate.SQL - drop table ContactInfoNP if exists
DEBUG: org.hibernate.SQL - drop table Person if exists
DEBUG: org.hibernate.SQL - drop table PersonNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_AddressNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_PersonNP if exists
DEBUG: org.hibernate.SQL - drop table Person_Address if exists
DEBUG: org.hibernate.SQL - drop table Person_Person if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompany if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompanyNP if exists
DEBUG: org.hibernate.SQL - create table Address (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table AddressNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BillingDetails (BILLING_DETAILS_TYPE varchar(31) not null, id bigint generated by default as identity, owner varchar(255), account varchar(255), bankName varchar(255), swift varchar(255), expMonth varchar(255), expYear varchar(255), number varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table Building (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP_floors (BuildingNP_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Building_floors (Building_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table CompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfo (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfoNP (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table Person (id integer generated by default as identity, maritalStatus integer, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP (id integer generated by default as identity, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP_AddressNP (PersonNP_id integer not null, previousAddresses_id integer not null, primary key (PersonNP_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table PersonNP_PersonNP (PersonNP_id integer not null, children_id integer not null, primary key (PersonNP_id, children_id))
DEBUG: org.hibernate.SQL - create table Person_Address (Person_id integer not null, previousAddresses_id integer not null, primary key (Person_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table Person_Person (Person_id integer not null, children_id integer not null, primary key (Person_id, children_id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompany (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint UK_r1wyhg02boe5ptr7ga47efn8m  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint UK_67gfyk0wfnpbq28bfgrt2i6ne  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors add constraint FK_cweg3u10rrds7oaqslkjdmmbt foreign key (BuildingNP_id) references BuildingNP
DEBUG: org.hibernate.SQL - alter table Building_floors add constraint FK_hod3abnvtsegc4wip7d5w46le foreign key (Building_id) references Building
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_tagx64iglr1dxpalbgothv83r foreign key (address_id) references Address
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_18fvr6kjabhwxtq2ceqvb7txh foreign key (spouse_id) references Person
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_hc9ilhwc8rkvubxmxsr05qa29 foreign key (address_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_k93m94nr77bbx2wwvisolk4vk foreign key (spouse_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_r1wyhg02boe5ptr7ga47efn8m foreign key (previousAddresses_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_c7qlkk4o48tj7yqp0d54b986r foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_14ln1v4pohujkoke61dwd7tr5 foreign key (children_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_29a7ov4gq0c7kw0r8jytxne7j foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_67gfyk0wfnpbq28bfgrt2i6ne foreign key (previousAddresses_id) references Address
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_jetf8130vvvgu3dvgdtrxylif foreign key (Person_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_797ib89nbicyy4f5gb2weoyh7 foreign key (children_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_inq4xm3i524cmia3rp65fx39w foreign key (Person_id) references Person
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
INFO : org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@1162410a] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into Address (id, city, moveInDate, rooms, state, street, zipcode) values (null, ?, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update Person set address_id=?, maritalStatus=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update Person set address_id=?, maritalStatus=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update Person set address_id=?, maritalStatus=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - insert into Person_Person (Person_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into Person_Person (Person_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into Person_Person (Person_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into Person_Person (Person_id, children_id) values (?, ?)
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@6dd93a21 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@11a7ba62 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@340b7ef6 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@4c0884e8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@231baf51 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@11841b15 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@73877e19 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@7b208b45 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5bfc257 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@34523d46 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@7cedfa63 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@3e83c18 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@783efb48 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5d235104 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4e8e8621 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@c446b14 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@3af356f : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@4443ef6f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7e46d648 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@51751e5f : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1bcf67e8 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@5f404594 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@53692008 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7b2a3ff8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1bbae752 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@460b6d54 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@5cf87cfd : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@76075d65 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@3a4ba480 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@27b71f50 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@383790cf : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@74971ed9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@131fcb6f : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@ccd1bc3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@878537d : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4455f57d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@29fc1a2b : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@4d0b0fd4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7a24eb3 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@6c37bd27 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_, person0_.address_id as address_5_11_, person0_.maritalStatus as maritalS2_11_, person0_.name as name3_11_, person0_.spouse_id as spouse_i6_11_, person0_.version as version4_11_ from Person person0_
DEBUG: org.hibernate.SQL - select address0_.id as id1_0_0_, address0_.city as city2_0_0_, address0_.moveInDate as moveInDa3_0_0_, address0_.rooms as rooms4_0_0_, address0_.state as state5_0_0_, address0_.street as street6_0_0_, address0_.zipcode as zipcode7_0_0_ from Address address0_ where address0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@38eb2fb0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@127f9161 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@77b9d0c7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@2532b351 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@2bf94401 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@4349754 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
      address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
        city = "Atlanta"
        id = 1.0
        moveInDate = 2017-03-03 10:59:08.916
        rooms = 5.0
        state = "GA"
        street = "777 Techwood Drive"
        zipcode = "30022"
      children = null
      id = 1.0
      maritalStatus = null
      name = "Dad"
      previousAddresses = null
      spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 2.0
        maritalStatus = null
        name = "Mom"
        previousAddresses = null
        spouse = (Ref #2)
        version = 1.0
      version = 1.0
    [1] = (Ref #4)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 3.0
      maritalStatus = null
      name = "Jack"
      previousAddresses = null
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 4.0
        maritalStatus = null
        name = "Lisa"
        previousAddresses = null
        spouse = (Ref #5)
        version = 0.0
      version = 1.0
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 5.0
      maritalStatus = null
      name = "Jill"
      previousAddresses = null
      spouse = null
      version = 0.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
        address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
          city = "Atlanta"
          id = 1.0
          moveInDate = Fri Mar 03 10:59:08 BRT 2017
          rooms = 5.0
          state = "GA"
          street = "777 Techwood Drive"
          zipcode = "30022"
        children = null
        id = 1.0
        maritalStatus = null
        name = "Dad"
        previousAddresses = null
        spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 2.0
          maritalStatus = null
          name = "Mom"
          previousAddresses = null
          spouse = (Ref #2)
          version = 1.0
        version = 1.0
      [1] = (Ref #4)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = null
        name = "Jack"
        previousAddresses = null
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 4.0
          maritalStatus = null
          name = "Lisa"
          previousAddresses = null
          spouse = (Ref #5)
          version = 0.0
        version = 1.0
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = null
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@7f829c76, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1931d99 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6a9950f1 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@7ad54c55 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@73017a80 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@6ae7deac : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@4a5905d9 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@1a3e5f23 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6293e39e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@365553de : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@34a0ef00 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@5c0f79f0 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@21fdfefc : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@3daa82be : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@ec1b2e4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@29a69a35 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@67e28be3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@e344ad3 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@de18f63 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@108bdbd8 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@6345e7b9 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_, person0_.address_id as address_5_11_, person0_.maritalStatus as maritalS2_11_, person0_.name as name3_11_, person0_.spouse_id as spouse_i6_11_, person0_.version as version4_11_ from Person person0_
DEBUG: org.hibernate.SQL - select address0_.id as id1_0_0_, address0_.city as city2_0_0_, address0_.moveInDate as moveInDa3_0_0_, address0_.rooms as rooms4_0_0_, address0_.state as state5_0_0_, address0_.street as street6_0_0_, address0_.zipcode as zipcode7_0_0_ from Address address0_ where address0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@58a4a74d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@4d48bd85 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@597f48df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@58a120b0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@7bbbb6a8 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@27d57a2c is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
      address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
        city = "Atlanta"
        id = 1.0
        moveInDate = 2017-03-03 10:59:08.916
        rooms = 5.0
        state = "GA"
        street = "777 Techwood Drive"
        zipcode = "30022"
      children = null
      id = 1.0
      maritalStatus = null
      name = "Dad"
      previousAddresses = null
      spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 2.0
        maritalStatus = null
        name = "Mom"
        previousAddresses = null
        spouse = (Ref #2)
        version = 1.0
      version = 1.0
    [1] = (Ref #4)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 3.0
      maritalStatus = null
      name = "Jack"
      previousAddresses = null
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 4.0
        maritalStatus = null
        name = "Lisa"
        previousAddresses = null
        spouse = (Ref #5)
        version = 0.0
      version = 1.0
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 5.0
      maritalStatus = null
      name = "Jill"
      previousAddresses = null
      spouse = null
      version = 0.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
        address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
          city = "Atlanta"
          id = 1.0
          moveInDate = Fri Mar 03 10:59:08 BRT 2017
          rooms = 5.0
          state = "GA"
          street = "777 Techwood Drive"
          zipcode = "30022"
        children = null
        id = 1.0
        maritalStatus = null
        name = "Dad"
        previousAddresses = null
        spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 2.0
          maritalStatus = null
          name = "Mom"
          previousAddresses = null
          spouse = (Ref #2)
          version = 1.0
        version = 1.0
      [1] = (Ref #4)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = null
        name = "Jack"
        previousAddresses = null
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 4.0
          maritalStatus = null
          name = "Lisa"
          previousAddresses = null
          spouse = (Ref #5)
          version = 0.0
        version = 1.0
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = null
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@7f829c76, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@31c2affc, testMethod = deserializeAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1dc2de84 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6a0659ac : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@58d63b16 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7c4fc2bf : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@7772054c : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@2f61f937 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@46866946 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@44de0113 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@236134a1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@369c9bb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@76d05cc9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@42b21d99 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@68dcfd52 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@25b5c5e3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5177e388 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@37b72ea : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@cc239ba : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@7d37f1c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@69d6a7cd : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@3162743f : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@31c2affc, testMethod = deserializeAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@655523dd, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@6f7e336b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3a2b2322 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@5e1218b4 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@12958360 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@c6e0f32 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@6f3f0fae : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@21a66d45 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@1f966492 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@63fdffcd : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7428de63 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@66f659e6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@4a68135e : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@46678e49 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@748e9b20 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2063c53e : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@2a9bc08f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@50f40653 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@50a3d0f6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@6e57b5e9 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@1abc9f14 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into ContactInfo (id, email, phone, version) values (null, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@655523dd, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@35636217, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1549bba7 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3e4f80cb : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@38704ff0 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@16ade133 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@4e61e4c2 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@c6a6c1d : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@36dfbdaf : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4f82663e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@e04ccf8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@51d143a1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@1a28aef1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@4647881c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6e0cff20 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@359b650b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6a9b0a6f : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@10667848 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@191a709b : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@77c7ed8e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@453d496b : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@66bacdbc : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into Person (id, address_id, maritalStatus, name, spouse_id, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update Person set address_id=?, maritalStatus=?, name=?, spouse_id=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@35636217, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@2a1debfa, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@44de94c3 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@256aa5f2 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@6411d3c8 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@2116b68b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@11de56e6 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@616b241a : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@b8e246c : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@1f387978 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@7cb2651f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4441d567 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@3e1624c7 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@62b969c4 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@dcc6211 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@47ec7422 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@48535004 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@610df783 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@f3fcd59 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2b56f5f8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@79d743e6 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@776802b0 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into ContactInfo (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update ContactInfo set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@2a1debfa, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@46d9aec8, testMethod = deserializeAndPersistNewXMLMappedEntityWithVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@14379273 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@7918c7f8 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@17740dae : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@1c504e66 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@345cf395 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@bc4d5e1 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@3c6aa04a : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2257fadf : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@7144655b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@5c82cd4f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@35835e65 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@289fdb08 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@7a231dfd : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@30814f43 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@1fde4f40 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@49cf9028 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@2b61a019 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@11a00961 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7ce9e05a : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@4992613f : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into Company (id, version, name) values (null, ?, ?)
DEBUG: org.hibernate.SQL - update Company set version=?, name=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@46d9aec8, testMethod = deserializeAndPersistNewXMLMappedEntityWithVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@5136207f, testMethod = deserializeAndPersistNewXMLMappedEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@26a4551a : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3fdecce : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@344426bf : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5411dd90 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@50194e8d : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@3cee53dc : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@290aeb20 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@73ad4ecc : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@69da0b12 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@2764c546 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@59496961 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@408b87aa : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@79b08632 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@787f32b7 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6aef4eb8 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@76c52298 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@bb9ab64 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@a52ca2e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1ad8df52 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@45d6ef73 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into PrimitiveCompany (id, version, name) values (null, ?, ?)
DEBUG: org.hibernate.SQL - update PrimitiveCompany set version=?, name=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@5136207f, testMethod = deserializeAndPersistNewXMLMappedEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@26d820eb : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@507d20bb : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@9fec931 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5cbd159f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@3b05a99b : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@2c43eb8 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7d0cc890 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@49293b43 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5ff60a8c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7ce4de34 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@67b7c170 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@67440de6 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@889d9e8 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5246a3b3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@ba354ca : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4c4f4365 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@acf859d : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6df3e44c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7ce7e83c : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@4a05d8ae : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@3f672204 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@6fd77352 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:08.916
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = null
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:08 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = null
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@348d18a3 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6c65860d : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2d000e80 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7cf283e1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@20e6c4dc : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@60737b23 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4d2a1da3 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@252f626c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@33f98231 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@48284d0e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@557286ad : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@b10a26d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@74075134 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@7e4d2287 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@3f4b840d : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@31464a43 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7f8633ae : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@68c87fc3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@bc0f53b : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@8d7b252 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@58496dc is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@540a903b is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Result from Logger:
flex.messaging.io.amf.MessageBody
  data = org.springframework.flex.hibernate4.domain.Person
    address = org.springframework.flex.hibernate4.domain.Address
      city = Atlanta
      id = 1
      moveInDate = 2017-03-03 10:59:08.916
      rooms = 5
      state = GA
      street = 777 Techwood Drive
      zipcode = 30022

    children = null
    id = 1
    maritalStatus = null
    name = Dad
    previousAddresses = null
    spouse = null
    version = 1

  responseURI = 
  replyMethod = 
  targetURI = 

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@5e2f3be5, testMethod = serializationInsideTransactionAfterHibernateGet@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1bd0b0e5 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@dc7b462 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1f51431 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@26a2f7f9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@38eb2c50 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@8bffb8b : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@21422231 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@10ee04df : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@7186333e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@692fd26 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@36f1046f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@56d93692 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@1686f0b4 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@76c548f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@3900fa71 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@26722665 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7d0614f : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@627d8516 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@5c10285a : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@6b667cb3 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@64b70919 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@3cec79d3 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:08.916
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = null
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:08 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = null
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@5e2f3be5, testMethod = serializationInsideTransactionAfterHibernateGet@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@328902d5 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@72e789cb : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@7c1812b3 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@43034809 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@39e67516 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@77010a30 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4bb003e9 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@12aa4996 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@18eec010 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@67c119b7 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@2ca5f1ed : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@6c03fb16 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@28348c6 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@6de0f580 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6e495b48 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@1d61c6dc : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@53c68ce : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6f9ad11c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@4b2d44bc : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@58e92c23 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.hibernate.SQL - select children0_.Person_id as Person_i1_11_0_, children0_.children_id as children2_16_0_, person1_.id as id1_11_1_, person1_.address_id as address_5_11_1_, person1_.maritalStatus as maritalS2_11_1_, person1_.name as name3_11_1_, person1_.spouse_id as spouse_i6_11_1_, person1_.version as version4_11_1_, address2_.id as id1_0_2_, address2_.city as city2_0_2_, address2_.moveInDate as moveInDa3_0_2_, address2_.rooms as rooms4_0_2_, address2_.state as state5_0_2_, address2_.street as street6_0_2_, address2_.zipcode as zipcode7_0_2_ from Person_Person children0_ inner join Person person1_ on children0_.children_id=person1_.id left outer join Address address2_ on person1_.address_id=address2_.id where children0_.Person_id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@23202c31 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@7a22a3c2 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@359ff4d9 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@376e7531 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:08.916
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = null
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = null
        name = "Jack"
        previousAddresses = null
        spouse = null
        version = 1.0
  id = 1.0
  maritalStatus = null
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:08 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 5.0
          maritalStatus = null
          name = "Jill"
          previousAddresses = null
          spouse = null
          version = 0.0
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 3.0
          maritalStatus = null
          name = "Jack"
          previousAddresses = null
          spouse = null
          version = 1.0
    id = 1.0
    maritalStatus = null
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@289778cd, testMethod = serializationInsideTransactionAfterHibernateGetAndInitializedCollection@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7495699f : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@7c2312fa : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@4cb0a000 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5ff2e84b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@74abbb : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@64a4dd8d : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@2dddc1b9 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@65a5d4f9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@40298285 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@22367b8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@41b0ae4c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@af9a89f : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6482eef : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@1fcf9739 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5b498842 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@1cb37ee4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5bcb04cb : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@385e36d4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2fc2a205 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@2881ad47 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.hibernate.SQL - select children0_.Person_id as Person_i1_11_0_, children0_.children_id as children2_16_0_, person1_.id as id1_11_1_, person1_.address_id as address_5_11_1_, person1_.maritalStatus as maritalS2_11_1_, person1_.name as name3_11_1_, person1_.spouse_id as spouse_i6_11_1_, person1_.version as version4_11_1_, address2_.id as id1_0_2_, address2_.city as city2_0_2_, address2_.moveInDate as moveInDa3_0_2_, address2_.rooms as rooms4_0_2_, address2_.state as state5_0_2_, address2_.street as street6_0_2_, address2_.zipcode as zipcode7_0_2_ from Person_Person children0_ inner join Person person1_ on children0_.children_id=person1_.id left outer join Address address2_ on person1_.address_id=address2_.id where children0_.Person_id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@7de843ef is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@3ece1e79 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@1023150a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@58a63629 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:08.916
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = null
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = null
        name = "Jack"
        previousAddresses = null
        spouse = null
        version = 1.0
  id = 1.0
  maritalStatus = null
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:08 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 5.0
          maritalStatus = null
          name = "Jill"
          previousAddresses = null
          spouse = null
          version = 0.0
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 3.0
          maritalStatus = null
          name = "Jack"
          previousAddresses = null
          spouse = null
          version = 1.0
    id = 1.0
    maritalStatus = null
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@289778cd, testMethod = serializationInsideTransactionAfterHibernateGetAndInitializedCollection@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@70e889e9, testMethod = serializationInsideTransactionAfterHibernateLoad@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@7c3ebc6b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@418c020b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@51351f28 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@15f2eda3 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@34cf294c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@604b1e1d : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@62566842 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@37191ef0 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@5edf2821 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@4dbad37 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@26a262d6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@58f07f02 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@75798d03 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@40f8f5a8 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@442f92e6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@7a55f148 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@3ae2ed38 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7f572c37 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@3f93e4a8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@5445f5ba : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@342726f1 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address_id as address_5_11_0_, person0_.maritalStatus as maritalS2_11_0_, person0_.name as name3_11_0_, person0_.spouse_id as spouse_i6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.moveInDate as moveInDa3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from Person person0_ left outer join Address address1_ on person0_.address_id=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@6f89292e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@67110f71 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:08.916
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = null
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:08 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = null
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5ce4369b testClass = SpringPropertyProxyHibernateNativeTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests@70e889e9, testMethod = serializationInsideTransactionAfterHibernateLoad@SpringPropertyProxyHibernateNativeTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cb19dba testClass = SpringPropertyProxyHibernateNativeTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.967 sec - in org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeTests
Running org.springframework.flex.hibernate4.config.RuntimeEnvironmentTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.flex.hibernate4.config.RuntimeEnvironmentTests]
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: []
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.springframework.flex.hibernate4.config.RuntimeEnvironmentTests
Running org.springframework.flex.hibernate4.config.xml.JpaMultiEntityManagerConfigurationTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@598260a6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@58b67519, org.springframework.test.context.support.DirtiesContextTestExecutionListener@281ce6bb]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/jpa-multi-entity-manager-context.xml]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-jpa-context.xml]
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@38018b62: startup date [Fri Mar 03 10:59:09 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
INFO : org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader - persistence.xml should be located inside META-INF directory; cannot determine persistence unit root URL for class path resource [org/springframework/flex/hibernate4/persistence.xml]
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'persistenceUnit'
WARN : org.hibernate.ejb.HibernatePersistence - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
INFO : org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: persistenceUnit
	...]
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table building_floors drop constraint FK_2c0ty5ivfopn51g7p24fw9ul4 if exists
DEBUG: org.hibernate.SQL - alter table buildingnp_floors drop constraint FK_15prgsxuvi23251bfw2d0u0cp if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_9lphfhlj4p0j4kvwdbtep6451 if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_ovc13dey9im6vxni2jhnojepb if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_CHILDREN" not found; SQL statement:
alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_CHILDREN" not found; SQL statement:
alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_PREVIOUS_ADDRESSES" not found; SQL statement:
alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSON_PREVIOUS_ADDRESSES" not found; SQL statement:
alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_pqicitxxnyvk2wwewy0a9lign if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_92o13isbur3a3foihu917dajx if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_CHILDREN" not found; SQL statement:
alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_CHILDREN" not found; SQL statement:
alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_PREVIOUS_ADDRESSES" not found; SQL statement:
alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists [42102-180]
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - HHH000389: Unsuccessful: alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists
ERROR: org.hibernate.tool.hbm2ddl.SchemaExport - Table "PERSONNP_PREVIOUS_ADDRESSES" not found; SQL statement:
alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists [42102-180]
DEBUG: org.hibernate.SQL - drop table address if exists
DEBUG: org.hibernate.SQL - drop table addressnp if exists
DEBUG: org.hibernate.SQL - drop table billing_details if exists
DEBUG: org.hibernate.SQL - drop table building if exists
DEBUG: org.hibernate.SQL - drop table building_floors if exists
DEBUG: org.hibernate.SQL - drop table buildingnp if exists
DEBUG: org.hibernate.SQL - drop table buildingnp_floors if exists
DEBUG: org.hibernate.SQL - drop table company if exists
DEBUG: org.hibernate.SQL - drop table companynp if exists
DEBUG: org.hibernate.SQL - drop table contact_info if exists
DEBUG: org.hibernate.SQL - drop table contact_infonp if exists
DEBUG: org.hibernate.SQL - drop table person if exists
DEBUG: org.hibernate.SQL - drop table person_children if exists
DEBUG: org.hibernate.SQL - drop table person_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table personnp if exists
DEBUG: org.hibernate.SQL - drop table personnp_children if exists
DEBUG: org.hibernate.SQL - drop table personnp_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table primitive_company if exists
DEBUG: org.hibernate.SQL - drop table primitive_companynp if exists
DEBUG: org.hibernate.SQL - create table address (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table addressnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table billing_details (billing_details_type varchar(31) not null, id bigint generated by default as identity, owner varchar(255), exp_month varchar(255), exp_year varchar(255), number varchar(255), account varchar(255), bank_name varchar(255), swift varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building_floors (building integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table buildingnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table buildingnp_floors (buildingnp integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table contact_info (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table contact_infonp (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person (id integer generated by default as identity, marital_status integer, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person_children (person integer not null, children integer not null, primary key (person, children))
DEBUG: org.hibernate.SQL - create table person_previous_addresses (person integer not null, previous_addresses integer not null, primary key (person, previous_addresses))
DEBUG: org.hibernate.SQL - create table personnp (id integer generated by default as identity, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table personnp_children (personnp integer not null, children integer not null, primary key (personnp, children))
DEBUG: org.hibernate.SQL - create table personnp_previous_addresses (personnp integer not null, previous_addresses integer not null, primary key (personnp, previous_addresses))
DEBUG: org.hibernate.SQL - create table primitive_company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table primitive_companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint UK_94wm7whrafkpk41bpru1eiuat  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint UK_tkkwe07i7nuv2ta4icr4us9pc  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table building_floors add constraint FK_2c0ty5ivfopn51g7p24fw9ul4 foreign key (building) references building
DEBUG: org.hibernate.SQL - alter table buildingnp_floors add constraint FK_15prgsxuvi23251bfw2d0u0cp foreign key (buildingnp) references buildingnp
DEBUG: org.hibernate.SQL - alter table person add constraint FK_9lphfhlj4p0j4kvwdbtep6451 foreign key (address) references address
DEBUG: org.hibernate.SQL - alter table person add constraint FK_ovc13dey9im6vxni2jhnojepb foreign key (spouse) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_s63x0jpx5lkvtvumwlhiju41 foreign key (children) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_tgu9qrbwurlwskv1l54c79yyi foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_94wm7whrafkpk41bpru1eiuat foreign key (previous_addresses) references address
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_36ii39l6ibc38l4nvu8su27n3 foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_pqicitxxnyvk2wwewy0a9lign foreign key (address) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_92o13isbur3a3foihu917dajx foreign key (spouse) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_82walxmfmpjv7pelofc9j8754 foreign key (children) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_95frpehn1jmqp0q76x57o9hgb foreign key (personnp) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_tkkwe07i7nuv2ta4icr4us9pc foreign key (previous_addresses) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_ow0xsnwf8xne5el1mkxc8lnmv foreign key (personnp) references personnp
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
INFO : org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader - persistence.xml should be located inside META-INF directory; cannot determine persistence unit root URL for class path resource [org/springframework/flex/hibernate4/persistence.xml]
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'persistenceUnit'
WARN : org.hibernate.ejb.HibernatePersistence - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
INFO : org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: persistenceUnit
	...]
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table building_floors drop constraint FK_2c0ty5ivfopn51g7p24fw9ul4 if exists
DEBUG: org.hibernate.SQL - alter table buildingnp_floors drop constraint FK_15prgsxuvi23251bfw2d0u0cp if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_9lphfhlj4p0j4kvwdbtep6451 if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_ovc13dey9im6vxni2jhnojepb if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_pqicitxxnyvk2wwewy0a9lign if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_92o13isbur3a3foihu917dajx if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists
DEBUG: org.hibernate.SQL - drop table address if exists
DEBUG: org.hibernate.SQL - drop table addressnp if exists
DEBUG: org.hibernate.SQL - drop table billing_details if exists
DEBUG: org.hibernate.SQL - drop table building if exists
DEBUG: org.hibernate.SQL - drop table building_floors if exists
DEBUG: org.hibernate.SQL - drop table buildingnp if exists
DEBUG: org.hibernate.SQL - drop table buildingnp_floors if exists
DEBUG: org.hibernate.SQL - drop table company if exists
DEBUG: org.hibernate.SQL - drop table companynp if exists
DEBUG: org.hibernate.SQL - drop table contact_info if exists
DEBUG: org.hibernate.SQL - drop table contact_infonp if exists
DEBUG: org.hibernate.SQL - drop table person if exists
DEBUG: org.hibernate.SQL - drop table person_children if exists
DEBUG: org.hibernate.SQL - drop table person_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table personnp if exists
DEBUG: org.hibernate.SQL - drop table personnp_children if exists
DEBUG: org.hibernate.SQL - drop table personnp_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table primitive_company if exists
DEBUG: org.hibernate.SQL - drop table primitive_companynp if exists
DEBUG: org.hibernate.SQL - create table address (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table addressnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table billing_details (billing_details_type varchar(31) not null, id bigint generated by default as identity, owner varchar(255), exp_month varchar(255), exp_year varchar(255), number varchar(255), account varchar(255), bank_name varchar(255), swift varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building_floors (building integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table buildingnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table buildingnp_floors (buildingnp integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table contact_info (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table contact_infonp (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person (id integer generated by default as identity, marital_status integer, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person_children (person integer not null, children integer not null, primary key (person, children))
DEBUG: org.hibernate.SQL - create table person_previous_addresses (person integer not null, previous_addresses integer not null, primary key (person, previous_addresses))
DEBUG: org.hibernate.SQL - create table personnp (id integer generated by default as identity, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table personnp_children (personnp integer not null, children integer not null, primary key (personnp, children))
DEBUG: org.hibernate.SQL - create table personnp_previous_addresses (personnp integer not null, previous_addresses integer not null, primary key (personnp, previous_addresses))
DEBUG: org.hibernate.SQL - create table primitive_company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table primitive_companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint UK_94wm7whrafkpk41bpru1eiuat  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint UK_tkkwe07i7nuv2ta4icr4us9pc  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table building_floors add constraint FK_2c0ty5ivfopn51g7p24fw9ul4 foreign key (building) references building
DEBUG: org.hibernate.SQL - alter table buildingnp_floors add constraint FK_15prgsxuvi23251bfw2d0u0cp foreign key (buildingnp) references buildingnp
DEBUG: org.hibernate.SQL - alter table person add constraint FK_9lphfhlj4p0j4kvwdbtep6451 foreign key (address) references address
DEBUG: org.hibernate.SQL - alter table person add constraint FK_ovc13dey9im6vxni2jhnojepb foreign key (spouse) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_s63x0jpx5lkvtvumwlhiju41 foreign key (children) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_tgu9qrbwurlwskv1l54c79yyi foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_94wm7whrafkpk41bpru1eiuat foreign key (previous_addresses) references address
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_36ii39l6ibc38l4nvu8su27n3 foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_pqicitxxnyvk2wwewy0a9lign foreign key (address) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_92o13isbur3a3foihu917dajx foreign key (spouse) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_82walxmfmpjv7pelofc9j8754 foreign key (children) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_95frpehn1jmqp0q76x57o9hgb foreign key (personnp) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_tkkwe07i7nuv2ta4icr4us9pc foreign key (previous_addresses) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_ow0xsnwf8xne5el1mkxc8lnmv foreign key (personnp) references personnp
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
WARN : org.hibernate.jpa.internal.EntityManagerFactoryRegistry - HHH000436: Entity manager factory name (persistenceUnit) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/config/jpa-message-broker.xml]
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@151bf776: startup date [Fri Mar 03 10:59:09 BRT 2017]; parent: org.springframework.web.context.support.GenericWebApplicationContext@38018b62
INFO : org.springframework.flex.config.FlexConfigurationManager - Loading Flex services configuration from: ServletContext resource [/WEB-INF/flex/services-config.xml]
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - BlazeDS - Community Edition: 4.0.0.14931
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - MessageBroker with id 'multiEntityManagerMessageBroker' is starting.
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@590f0c50 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3a90c13c : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@39c96e48 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@40d23c82 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@7cf78c85 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@ebe067d : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@3a4ab7f7 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6badba10 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@550de6b8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@3a1706e1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@3c6c4689 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@594d9f07 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5e9f73b : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@1a565afb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2fd64b11 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@949c598 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@43d3aba5 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6bfaa0a6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@76e9f00b : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@314b9e4b : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - MessageBroker with id 'multiEntityManagerMessageBroker' is ready (startup time: '97' ms)
INFO : org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Default mapping to handler 'multiEntityManagerMessageBroker'
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.124 sec - in org.springframework.flex.hibernate4.config.xml.JpaMultiEntityManagerConfigurationTests
Running org.springframework.flex.hibernate4.config.xml.HibernateMultiSessionFactoryConfigurationTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7eb200ce, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2ee83775, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7c2924d7]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-multi-session-factory-context.xml]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-context.xml]
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@b5de58f: startup date [Fri Mar 03 10:59:10 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists
DEBUG: org.hibernate.SQL - alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists
DEBUG: org.hibernate.SQL - drop table Address if exists
DEBUG: org.hibernate.SQL - drop table AddressNP if exists
DEBUG: org.hibernate.SQL - drop table BillingDetails if exists
DEBUG: org.hibernate.SQL - drop table Building if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP_floors if exists
DEBUG: org.hibernate.SQL - drop table Building_floors if exists
DEBUG: org.hibernate.SQL - drop table Company if exists
DEBUG: org.hibernate.SQL - drop table CompanyNP if exists
DEBUG: org.hibernate.SQL - drop table ContactInfo if exists
DEBUG: org.hibernate.SQL - drop table ContactInfoNP if exists
DEBUG: org.hibernate.SQL - drop table Person if exists
DEBUG: org.hibernate.SQL - drop table PersonNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_AddressNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_PersonNP if exists
DEBUG: org.hibernate.SQL - drop table Person_Address if exists
DEBUG: org.hibernate.SQL - drop table Person_Person if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompany if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompanyNP if exists
DEBUG: org.hibernate.SQL - create table Address (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table AddressNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BillingDetails (BILLING_DETAILS_TYPE varchar(31) not null, id bigint generated by default as identity, owner varchar(255), account varchar(255), bankName varchar(255), swift varchar(255), expMonth varchar(255), expYear varchar(255), number varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table Building (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP_floors (BuildingNP_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Building_floors (Building_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table CompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfo (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfoNP (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table Person (id integer generated by default as identity, maritalStatus integer, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP (id integer generated by default as identity, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP_AddressNP (PersonNP_id integer not null, previousAddresses_id integer not null, primary key (PersonNP_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table PersonNP_PersonNP (PersonNP_id integer not null, children_id integer not null, primary key (PersonNP_id, children_id))
DEBUG: org.hibernate.SQL - create table Person_Address (Person_id integer not null, previousAddresses_id integer not null, primary key (Person_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table Person_Person (Person_id integer not null, children_id integer not null, primary key (Person_id, children_id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompany (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint UK_r1wyhg02boe5ptr7ga47efn8m  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint UK_67gfyk0wfnpbq28bfgrt2i6ne  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors add constraint FK_cweg3u10rrds7oaqslkjdmmbt foreign key (BuildingNP_id) references BuildingNP
DEBUG: org.hibernate.SQL - alter table Building_floors add constraint FK_hod3abnvtsegc4wip7d5w46le foreign key (Building_id) references Building
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_tagx64iglr1dxpalbgothv83r foreign key (address_id) references Address
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_18fvr6kjabhwxtq2ceqvb7txh foreign key (spouse_id) references Person
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_hc9ilhwc8rkvubxmxsr05qa29 foreign key (address_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_k93m94nr77bbx2wwvisolk4vk foreign key (spouse_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_r1wyhg02boe5ptr7ga47efn8m foreign key (previousAddresses_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_c7qlkk4o48tj7yqp0d54b986r foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_14ln1v4pohujkoke61dwd7tr5 foreign key (children_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_29a7ov4gq0c7kw0r8jytxne7j foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_67gfyk0wfnpbq28bfgrt2i6ne foreign key (previousAddresses_id) references Address
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_jetf8130vvvgu3dvgdtrxylif foreign key (Person_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_797ib89nbicyy4f5gb2weoyh7 foreign key (children_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_inq4xm3i524cmia3rp65fx39w foreign key (Person_id) references Person
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
INFO : org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@73a0f2b] of Hibernate SessionFactory for HibernateTransactionManager
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists
DEBUG: org.hibernate.SQL - alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists
DEBUG: org.hibernate.SQL - drop table Address if exists
DEBUG: org.hibernate.SQL - drop table AddressNP if exists
DEBUG: org.hibernate.SQL - drop table BillingDetails if exists
DEBUG: org.hibernate.SQL - drop table Building if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP_floors if exists
DEBUG: org.hibernate.SQL - drop table Building_floors if exists
DEBUG: org.hibernate.SQL - drop table ContactInfo if exists
DEBUG: org.hibernate.SQL - drop table ContactInfoNP if exists
DEBUG: org.hibernate.SQL - drop table Person if exists
DEBUG: org.hibernate.SQL - drop table PersonNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_AddressNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_PersonNP if exists
DEBUG: org.hibernate.SQL - drop table Person_Address if exists
DEBUG: org.hibernate.SQL - drop table Person_Person if exists
DEBUG: org.hibernate.SQL - create table Address (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table AddressNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BillingDetails (BILLING_DETAILS_TYPE varchar(31) not null, id bigint generated by default as identity, owner varchar(255), account varchar(255), bankName varchar(255), swift varchar(255), expMonth varchar(255), expYear varchar(255), number varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table Building (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP_floors (BuildingNP_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Building_floors (Building_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table ContactInfo (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfoNP (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table Person (id integer generated by default as identity, maritalStatus integer, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP (id integer generated by default as identity, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP_AddressNP (PersonNP_id integer not null, previousAddresses_id integer not null, primary key (PersonNP_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table PersonNP_PersonNP (PersonNP_id integer not null, children_id integer not null, primary key (PersonNP_id, children_id))
DEBUG: org.hibernate.SQL - create table Person_Address (Person_id integer not null, previousAddresses_id integer not null, primary key (Person_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table Person_Person (Person_id integer not null, children_id integer not null, primary key (Person_id, children_id))
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint UK_r1wyhg02boe5ptr7ga47efn8m  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint UK_67gfyk0wfnpbq28bfgrt2i6ne  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors add constraint FK_cweg3u10rrds7oaqslkjdmmbt foreign key (BuildingNP_id) references BuildingNP
DEBUG: org.hibernate.SQL - alter table Building_floors add constraint FK_hod3abnvtsegc4wip7d5w46le foreign key (Building_id) references Building
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_tagx64iglr1dxpalbgothv83r foreign key (address_id) references Address
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_18fvr6kjabhwxtq2ceqvb7txh foreign key (spouse_id) references Person
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_hc9ilhwc8rkvubxmxsr05qa29 foreign key (address_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_k93m94nr77bbx2wwvisolk4vk foreign key (spouse_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_r1wyhg02boe5ptr7ga47efn8m foreign key (previousAddresses_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_c7qlkk4o48tj7yqp0d54b986r foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_14ln1v4pohujkoke61dwd7tr5 foreign key (children_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_29a7ov4gq0c7kw0r8jytxne7j foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_67gfyk0wfnpbq28bfgrt2i6ne foreign key (previousAddresses_id) references Address
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_jetf8130vvvgu3dvgdtrxylif foreign key (Person_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_797ib89nbicyy4f5gb2weoyh7 foreign key (children_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_inq4xm3i524cmia3rp65fx39w foreign key (Person_id) references Person
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/config/hibernate-message-broker.xml]
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@321ca237: startup date [Fri Mar 03 10:59:10 BRT 2017]; parent: org.springframework.web.context.support.GenericWebApplicationContext@b5de58f
INFO : org.springframework.flex.config.FlexConfigurationManager - Loading Flex services configuration from: ServletContext resource [/WEB-INF/flex/services-config.xml]
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - BlazeDS - Community Edition: 4.0.0.14931
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - MessageBroker with id 'multiSessionFactoryMessageBroker' is starting.
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@8aeab9e : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@2a2dc0a : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@3a00b15d : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@36ef1d65 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@4be0a27d : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@5f366587 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@6003ad65 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2ec99035 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@60743cdb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@c02670f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@71179b6f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@13bdf540 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@526e8108 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4dcbae55 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4a9860 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7ca16adc : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5ae1c281 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@4ac8768e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1e957e2f : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@691500ab : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.core.MessageBrokerFactoryBean - MessageBroker with id 'multiSessionFactoryMessageBroker' is ready (startup time: '35' ms)
INFO : org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Default mapping to handler 'multiSessionFactoryMessageBroker'
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.367 sec - in org.springframework.flex.hibernate4.config.xml.HibernateMultiSessionFactoryConfigurationTests
Running org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ea04cab, org.springframework.test.context.transaction.TransactionalTestExecutionListener@134f8ef6, org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests$InternalDbTestExecutionListener@5a90265a]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml]
INFO : org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@6a32191e: startup date [Fri Mar 03 10:59:10 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
INFO : org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader - persistence.xml should be located inside META-INF directory; cannot determine persistence unit root URL for class path resource [org/springframework/flex/hibernate4/persistence.xml]
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'persistenceUnit'
WARN : org.hibernate.ejb.HibernatePersistence - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
INFO : org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: persistenceUnit
	...]
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table building_floors drop constraint FK_2c0ty5ivfopn51g7p24fw9ul4 if exists
DEBUG: org.hibernate.SQL - alter table buildingnp_floors drop constraint FK_15prgsxuvi23251bfw2d0u0cp if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_9lphfhlj4p0j4kvwdbtep6451 if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_ovc13dey9im6vxni2jhnojepb if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_pqicitxxnyvk2wwewy0a9lign if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_92o13isbur3a3foihu917dajx if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists
DEBUG: org.hibernate.SQL - drop table address if exists
DEBUG: org.hibernate.SQL - drop table addressnp if exists
DEBUG: org.hibernate.SQL - drop table billing_details if exists
DEBUG: org.hibernate.SQL - drop table building if exists
DEBUG: org.hibernate.SQL - drop table building_floors if exists
DEBUG: org.hibernate.SQL - drop table buildingnp if exists
DEBUG: org.hibernate.SQL - drop table buildingnp_floors if exists
DEBUG: org.hibernate.SQL - drop table company if exists
DEBUG: org.hibernate.SQL - drop table companynp if exists
DEBUG: org.hibernate.SQL - drop table contact_info if exists
DEBUG: org.hibernate.SQL - drop table contact_infonp if exists
DEBUG: org.hibernate.SQL - drop table person if exists
DEBUG: org.hibernate.SQL - drop table person_children if exists
DEBUG: org.hibernate.SQL - drop table person_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table personnp if exists
DEBUG: org.hibernate.SQL - drop table personnp_children if exists
DEBUG: org.hibernate.SQL - drop table personnp_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table primitive_company if exists
DEBUG: org.hibernate.SQL - drop table primitive_companynp if exists
DEBUG: org.hibernate.SQL - create table address (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table addressnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table billing_details (billing_details_type varchar(31) not null, id bigint generated by default as identity, owner varchar(255), exp_month varchar(255), exp_year varchar(255), number varchar(255), account varchar(255), bank_name varchar(255), swift varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building_floors (building integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table buildingnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table buildingnp_floors (buildingnp integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table contact_info (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table contact_infonp (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person (id integer generated by default as identity, marital_status integer, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person_children (person integer not null, children integer not null, primary key (person, children))
DEBUG: org.hibernate.SQL - create table person_previous_addresses (person integer not null, previous_addresses integer not null, primary key (person, previous_addresses))
DEBUG: org.hibernate.SQL - create table personnp (id integer generated by default as identity, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table personnp_children (personnp integer not null, children integer not null, primary key (personnp, children))
DEBUG: org.hibernate.SQL - create table personnp_previous_addresses (personnp integer not null, previous_addresses integer not null, primary key (personnp, previous_addresses))
DEBUG: org.hibernate.SQL - create table primitive_company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table primitive_companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint UK_94wm7whrafkpk41bpru1eiuat  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint UK_tkkwe07i7nuv2ta4icr4us9pc  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table building_floors add constraint FK_2c0ty5ivfopn51g7p24fw9ul4 foreign key (building) references building
DEBUG: org.hibernate.SQL - alter table buildingnp_floors add constraint FK_15prgsxuvi23251bfw2d0u0cp foreign key (buildingnp) references buildingnp
DEBUG: org.hibernate.SQL - alter table person add constraint FK_9lphfhlj4p0j4kvwdbtep6451 foreign key (address) references address
DEBUG: org.hibernate.SQL - alter table person add constraint FK_ovc13dey9im6vxni2jhnojepb foreign key (spouse) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_s63x0jpx5lkvtvumwlhiju41 foreign key (children) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_tgu9qrbwurlwskv1l54c79yyi foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_94wm7whrafkpk41bpru1eiuat foreign key (previous_addresses) references address
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_36ii39l6ibc38l4nvu8su27n3 foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_pqicitxxnyvk2wwewy0a9lign foreign key (address) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_92o13isbur3a3foihu917dajx foreign key (spouse) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_82walxmfmpjv7pelofc9j8754 foreign key (children) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_95frpehn1jmqp0q76x57o9hgb foreign key (personnp) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_tkkwe07i7nuv2ta4icr4us9pc foreign key (previous_addresses) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_ow0xsnwf8xne5el1mkxc8lnmv foreign key (personnp) references personnp
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
WARN : org.hibernate.jpa.internal.EntityManagerFactoryRegistry - HHH000436: Entity manager factory name (persistenceUnit) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into addressnp (id, city, move_in_date, rooms, state, street, zipcode) values (null, ?, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update personnp set address=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update personnp set address=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update personnp set address=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - insert into personnp_children (personnp, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into personnp_children (personnp, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into personnp_children (personnp, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into personnp_children (personnp, children) values (?, ?)
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@39b626e5, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@2ce03e86 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@1c628f6a : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@9b47400 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@747835f5 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@594131f2 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@51d0ec6f : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7bee8621 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4e0cc334 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@1e12a5a6 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4877919f : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@47a7c93e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@6f9ab79d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@64ae105d : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@10a18e3e : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@69364b2d : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@53aa2fc9 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4792f119 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@5bde57ab : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@ea00de : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@23ca36d : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_, personnp0_.address as address4_14_, personnp0_.name as name2_14_, personnp0_.spouse as spouse5_14_, personnp0_.version as version3_14_ from personnp personnp0_
DEBUG: org.hibernate.SQL - select addressnp0_.id as id1_1_0_, addressnp0_.city as city2_1_0_, addressnp0_.move_in_date as move_in_3_1_0_, addressnp0_.rooms as rooms4_1_0_, addressnp0_.state as state5_1_0_, addressnp0_.street as street6_1_0_, addressnp0_.zipcode as zipcode7_1_0_ from addressnp addressnp0_ where addressnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@2d258eff is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@1283ca23 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@1d6751e3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@6dca31eb is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@64502326 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@4a058df8 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 1.0
      version = 1.0
      name = "Dad"
      spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 2.0
        version = 1.0
        name = "Mom"
        spouse = (Ref #2)
        address = null
        previousAddresses = null
        children = null
      address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
        id = 1.0
        street = "777 Techwood Drive"
        city = "Atlanta"
        state = "GA"
        zipcode = "30022"
        rooms = 5.0
        moveInDate = 2017-03-03 10:59:11.051
      previousAddresses = null
      children = null
    [1] = (Ref #3)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 3.0
      version = 1.0
      name = "Jack"
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 4.0
        version = 0.0
        name = "Lisa"
        spouse = (Ref #5)
        address = null
        previousAddresses = null
        children = null
      address = null
      previousAddresses = null
      children = null
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 5.0
      version = 0.0
      name = "Jill"
      spouse = null
      address = null
      previousAddresses = null
      children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 1.0
        version = 1.0
        name = "Dad"
        spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 2.0
          version = 1.0
          name = "Mom"
          spouse = (Ref #2)
          address = null
          previousAddresses = null
          children = null
        address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
          id = 1.0
          street = "777 Techwood Drive"
          city = "Atlanta"
          state = "GA"
          zipcode = "30022"
          rooms = 5.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
        previousAddresses = null
        children = null
      [1] = (Ref #3)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 4.0
          version = 0.0
          name = "Lisa"
          spouse = (Ref #5)
          address = null
          previousAddresses = null
          children = null
        address = null
        previousAddresses = null
        children = null
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@39b626e5, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@5934ca1e, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@5348d83c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@477021ee : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2180e789 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5e9bbd9d : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@4b87074a : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@d3e3085 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@2ba42204 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@285005b8 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5b1efaaf : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@27585351 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@2de6f1bc : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@5b35c7d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@29d405e6 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4c731956 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@56826a75 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@49cd946c : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@40bf4386 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@14d25b6e : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@51c65a43 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@740dcae3 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into contact_infonp (id, email, phone, version) values (null, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@5934ca1e, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@5f726750, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4e80a001 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@624b523 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@50b46e24 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@1c30cb85 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@577bf0aa : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@7455dacb : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7634f2b : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@1d15c0a1 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@15639d09 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4fba8eec : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@52bd9a27 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@611e5819 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@681c0ae6 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@73ca34e7 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4d98e41b : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5ed5b321 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@5696c927 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@7459a21e : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7eeb38b2 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@d54d0f5 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update personnp set address=?, name=?, spouse=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@5f726750, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@61149fa5, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@149c39b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@f2d890c : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1a2e0d57 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5f025000 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@10980560 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@739e8b96 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@19b07407 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@54ffa561 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@49c099b : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@3d9f0a5 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@1953bc95 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@30aec673 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@549ac12c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@188a5fc2 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@1cb9ef52 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5a622fe8 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@58f31629 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@124d26ba : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@415d88de : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@a0bf272 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into contact_infonp (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update contact_infonp set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@61149fa5, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4c07d1fc : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@2eada095 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@52831a73 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@1416ff46 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@66ec4409 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@2506e949 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@6f1c3f18 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4c531172 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@489bc8fd : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@5ac53c06 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@54af3cb9 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@236fdf : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@16e99306 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@653fb8d1 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@48581a3b : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@531ec978 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@93501be : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@11d4d979 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@195580ba : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@3c25cfe1 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_0_, personnp0_.address as address4_14_0_, personnp0_.name as name2_14_0_, personnp0_.spouse as spouse5_14_0_, personnp0_.version as version3_14_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.move_in_date as move_in_3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from personnp personnp0_ left outer join addressnp addressnp1_ on personnp0_.address=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@70716259 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@db99785 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.051
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@6c17c0f8, testMethod = serializationInsideTransactionAfterFind@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@260e3837 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@88b76f2 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1b4872bc : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@498a612d : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1e1237ab : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@4dfdfe7d : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@1578b8ec : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@f613067 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@c1e14f : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@226de93c : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@72028a45 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@74667e6a : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@7b222230 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@364b1061 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@50fdf44f : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@172f4514 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7df6d663 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@13d019a4 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2c30c81d : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@415a3f6a : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_0_, personnp0_.address as address4_14_0_, personnp0_.name as name2_14_0_, personnp0_.spouse as spouse5_14_0_, personnp0_.version as version3_14_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.move_in_date as move_in_3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from personnp personnp0_ left outer join addressnp addressnp1_ on personnp0_.address=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@23310248 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@3380ca3d is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.051
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@6c17c0f8, testMethod = serializationInsideTransactionAfterFind@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@5f9f3e58 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3c19592c : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@60e1d87c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@2eb60c71 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@87d9a01 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@7e5b621b : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@10177794 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@e5c2463 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@6a950a3b : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4f7be6c8 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@647b9364 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@b6bccb4 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@49edcb30 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@59303963 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@61e86192 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@34330f77 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@1320e68a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@4b033eac : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@69c532af : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@45a1d057 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_0_, personnp0_.address as address4_14_0_, personnp0_.name as name2_14_0_, personnp0_.spouse as spouse5_14_0_, personnp0_.version as version3_14_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.move_in_date as move_in_3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from personnp personnp0_ left outer join addressnp addressnp1_ on personnp0_.address=addressnp1_.id where personnp0_.id=?
DEBUG: org.hibernate.SQL - select children0_.personnp as personnp1_14_0_, children0_.children as children2_15_0_, personnp1_.id as id1_14_1_, personnp1_.address as address4_14_1_, personnp1_.name as name2_14_1_, personnp1_.spouse as spouse5_14_1_, personnp1_.version as version3_14_1_, addressnp2_.id as id1_1_2_, addressnp2_.city as city2_1_2_, addressnp2_.move_in_date as move_in_3_1_2_, addressnp2_.rooms as rooms4_1_2_, addressnp2_.state as state5_1_2_, addressnp2_.street as street6_1_2_, addressnp2_.zipcode as zipcode7_1_2_ from personnp_children children0_ inner join personnp personnp1_ on children0_.children=personnp1_.id left outer join addressnp addressnp2_ on personnp1_.address=addressnp2_.id where children0_.personnp=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@52d0f583 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@8fd91d1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@2be818da is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@193eb1ba is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.051
  previousAddresses = null
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 5.0
          version = 0.0
          name = "Jill"
          spouse = null
          address = null
          previousAddresses = null
          children = null
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 3.0
          version = 1.0
          name = "Jack"
          spouse = null
          address = null
          previousAddresses = null
          children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@1d7eb170, testMethod = serializationInsideTransactionAfterFindAndInitializedCollection@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@5b251fb9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@67d4c48d : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@230a73f2 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@4b97b3d2 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@383cb5ce : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@798deee8 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@96897c8 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@7f97bc14 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@22d8f4ed : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@3434a4f0 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@79afa369 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@3b9ac754 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5e002356 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4f820f42 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4b325930 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@267f9765 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@79ba0a6f : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@261de205 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7f3fc42f : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@25a1a012 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_0_, personnp0_.address as address4_14_0_, personnp0_.name as name2_14_0_, personnp0_.spouse as spouse5_14_0_, personnp0_.version as version3_14_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.move_in_date as move_in_3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from personnp personnp0_ left outer join addressnp addressnp1_ on personnp0_.address=addressnp1_.id where personnp0_.id=?
DEBUG: org.hibernate.SQL - select children0_.personnp as personnp1_14_0_, children0_.children as children2_15_0_, personnp1_.id as id1_14_1_, personnp1_.address as address4_14_1_, personnp1_.name as name2_14_1_, personnp1_.spouse as spouse5_14_1_, personnp1_.version as version3_14_1_, addressnp2_.id as id1_1_2_, addressnp2_.city as city2_1_2_, addressnp2_.move_in_date as move_in_3_1_2_, addressnp2_.rooms as rooms4_1_2_, addressnp2_.state as state5_1_2_, addressnp2_.street as street6_1_2_, addressnp2_.zipcode as zipcode7_1_2_ from personnp_children children0_ inner join personnp personnp1_ on children0_.children=personnp1_.id left outer join addressnp addressnp2_ on personnp1_.address=addressnp2_.id where children0_.personnp=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@6c33da7a is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@443a53df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@5bf9ea6b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@b950f82 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.051
  previousAddresses = null
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = null
        address = null
        previousAddresses = null
        children = null
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 3.0
          version = 1.0
          name = "Jack"
          spouse = null
          address = null
          previousAddresses = null
          children = null
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 5.0
          version = 0.0
          name = "Jill"
          spouse = null
          address = null
          previousAddresses = null
          children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@1d7eb170, testMethod = serializationInsideTransactionAfterFindAndInitializedCollection@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4e424582 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@58dad04a : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@73e776b7 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@113ee1ce : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@4d0cc83e : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@43da0955 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@bc09d57 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6d963d70 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@467045c4 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@55736cfe : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@5a566922 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@6f7a2a5 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@42ed89da : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@c3719e5 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@65c17e38 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5e180aaf : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7015ebef : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@44592c39 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2a87ba34 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@34d480b9 : [number, expMonth, expYear, id, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@617449dd, testMethod = serializationInsideTransactionAfterGetReference@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@2e590b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@42ef042a : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1df5c7e3 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5e0c4f21 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@2c18a3ea : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@166c2c17 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@25953be6 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@19dc0d32 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@70b2fa10 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7c96c85 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@b0f2d91 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@7243145f : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@15c6027d : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5927f904 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2bb62414 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@413d2cd1 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@644d1b61 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2443135 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@184823ed : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@30bbcf91 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_0_, personnp0_.address as address4_14_0_, personnp0_.name as name2_14_0_, personnp0_.spouse as spouse5_14_0_, personnp0_.version as version3_14_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.move_in_date as move_in_3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from personnp personnp0_ left outer join addressnp addressnp1_ on personnp0_.address=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@1e98b788 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@28e8888d is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.051
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@617449dd, testMethod = serializationInsideTransactionAfterGetReference@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7aaad0 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@eed890d : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@10f477e2 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6097fca9 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@35eee641 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@5729b410 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@64518270 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@3b7c58e7 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@79627d27 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@6371cf2f : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@b5b9333 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@52b959df : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@38588dea : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@553d2579 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2a8f6e6 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@1ac730cd : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@668cc9a2 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@5aa62ee7 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1f7cec93 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@3c9ef6e9 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_14_, personnp0_.address as address4_14_, personnp0_.name as name2_14_, personnp0_.spouse as spouse5_14_, personnp0_.version as version3_14_ from personnp personnp0_
DEBUG: org.hibernate.SQL - select addressnp0_.id as id1_1_0_, addressnp0_.city as city2_1_0_, addressnp0_.move_in_date as move_in_3_1_0_, addressnp0_.rooms as rooms4_1_0_, addressnp0_.state as state5_1_0_, addressnp0_.street as street6_1_0_, addressnp0_.zipcode as zipcode7_1_0_ from addressnp addressnp0_ where addressnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@27b337bb is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@608cd501 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@6467ddc7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@5c18d6d4 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@59636c47 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@6cbb175 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 1.0
      version = 1.0
      name = "Dad"
      spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 2.0
        version = 1.0
        name = "Mom"
        spouse = (Ref #2)
        address = null
        previousAddresses = null
        children = null
      address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
        id = 1.0
        street = "777 Techwood Drive"
        city = "Atlanta"
        state = "GA"
        zipcode = "30022"
        rooms = 5.0
        moveInDate = 2017-03-03 10:59:11.051
      previousAddresses = null
      children = null
    [1] = (Ref #3)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 3.0
      version = 1.0
      name = "Jack"
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 4.0
        version = 0.0
        name = "Lisa"
        spouse = (Ref #5)
        address = null
        previousAddresses = null
        children = null
      address = null
      previousAddresses = null
      children = null
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 5.0
      version = 0.0
      name = "Jill"
      spouse = null
      address = null
      previousAddresses = null
      children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 1.0
        version = 1.0
        name = "Dad"
        spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 2.0
          version = 1.0
          name = "Mom"
          spouse = (Ref #2)
          address = null
          previousAddresses = null
          children = null
        address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
          id = 1.0
          street = "777 Techwood Drive"
          city = "Atlanta"
          state = "GA"
          zipcode = "30022"
          rooms = 5.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
        previousAddresses = null
        children = null
      [1] = (Ref #3)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 4.0
          version = 0.0
          name = "Lisa"
          spouse = (Ref #5)
          address = null
          previousAddresses = null
          children = null
        address = null
        previousAddresses = null
        children = null
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@4dad8ec0, testMethod = setValueAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@24dd44f9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@ccd341d : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@4f1fb828 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6ee5f485 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@20d19f2c : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@45592af7 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@77b5148c : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@36359723 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@1ab14636 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@16b3c905 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@49fdbe2b : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@53eba4b8 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@437bd805 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4b88ca8e : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6fa02932 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@61608e1a : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7c46c9c3 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@7197b07f : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1f10fec6 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@7a65a360 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@4dad8ec0, testMethod = setValueAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@33a8c9c9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@382dc417 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@3daf03d8 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@510689af : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@2415e4c7 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@72ce812e : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@373afd6c : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@521441d5 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@592ca48c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@5fed9976 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@3fdcde7a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@4f363abd : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@7302ff13 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4017fe2c : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@1961d75a : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@677ce519 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@3e26482 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@7cfb0c4c : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@6b37df8e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@6b63abdc : [number, expMonth, expYear, id, owner]
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@7b351446 is null
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = NaN
  version = NaN
  name = "Bob"
  spouse = null
  address = null
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = NaN
    version = NaN
    name = "Bob"
    spouse = null
    address = null
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@7c5df615, testMethod = persistNewEntityWithVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@9df564f : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@1a21f43f : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@7f0a133d : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@241fbec : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@715fa8c5 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@644a3add : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4b765e92 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4665428b : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@4a70d302 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7fd99443 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@622d7e4 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@6a3fbcb1 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@261b9a37 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@15d3793b : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@55e1192 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@1213ffbc : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@68a305eb : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6637a365 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1310fcb0 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@1ef31f71 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into personnp (id, address, name, spouse, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update personnp set address=?, name=?, spouse=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@7c5df615, testMethod = persistNewEntityWithVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@415795f3, testMethod = persistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2e71240b]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@2fe2965c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3375ebd3 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@40943a6 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@798cb6d9 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@42679fc2 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@5e50df2e : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@100aa331 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@c2cf597 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@724bf25f : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@2abafa97 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6f6cc7da : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@40717ed : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@29f3c438 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5460edd3 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5dbbb292 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@613f7eb7 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@565aa4ac : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@587c5c1 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@528c8c1 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@1f78d415 : [number, expMonth, expYear, id, owner]
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.ContactInfoNP@1c046c92 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.ContactInfoNP@1c046c92 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'phone' on instance org.springframework.flex.hibernate4.domain.ContactInfoNP@1c046c92 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'email' on instance org.springframework.flex.hibernate4.domain.ContactInfoNP@1c046c92 is class java.lang.String
DEBUG: org.hibernate.SQL - insert into contact_infonp (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update contact_infonp set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.ContactInfoNP')
  id = 0.0
  version = -1.0
  phone = "5555551234"
  email = "bob@foo.com"

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.ContactInfoNP')
    id = 0.0
    version = -1.0
    phone = "5555551234"
    email = "bob@foo.com"

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@515b9d4a testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests@415795f3, testMethod = persistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPAFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@32a4ecbe testClass = SpringPropertyProxyHibernateJPAFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1f84327b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@39549f33 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@dbddbe3 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7a83ccd2 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@44aa2e13 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@599a9cb2 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@3a1b36a1 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@5e1a986c : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@4b55ff0a : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@46a795de : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@256a0d95 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@2f3928ac : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@4bf03fee : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@31834a2b : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@44f0ff2b : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@22ead351 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@68af87ad : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@43d65a81 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@9cfc77 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@7418d76e : [number, expMonth, expYear, id, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7675c171 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@44e4cb76 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@51cab489 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@2f9a10df : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@773c2214 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@15e1f8fe : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@110b7837 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6ee88e21 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@78d23d6a : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@626e0c86 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@28ee0a3c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@2dd1086 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6b8d54da : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@79957f11 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@217235f5 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@4b41587d : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4aebee4b : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@18d47df0 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@28393e82 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@697a0948 : [number, expMonth, expYear, id, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4776e209 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@265a094b : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1f536481 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5234b61a : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@22a260ff : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@54c425b1 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@50b734c4 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2744dcae : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@16d0e521 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@634ca3e7 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@ab4aa5e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@b14b60a : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@1a7cb3a4 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@1c297897 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@33e0c716 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@1d6a8386 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@6274f21c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@35cec305 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@237add : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@491cafec : [number, expMonth, expYear, id, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests - Deserializer Trace:

Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.303 sec - in org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPAFieldAccessTests
Running org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@54c60202, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7889b4b9, org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests$InternalDbTestExecutionListener@1e545821]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-np-context.xml]
INFO : org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@12952aff: startup date [Fri Mar 03 10:59:11 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors drop constraint FK_cweg3u10rrds7oaqslkjdmmbt if exists
DEBUG: org.hibernate.SQL - alter table Building_floors drop constraint FK_hod3abnvtsegc4wip7d5w46le if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_tagx64iglr1dxpalbgothv83r if exists
DEBUG: org.hibernate.SQL - alter table Person drop constraint FK_18fvr6kjabhwxtq2ceqvb7txh if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_hc9ilhwc8rkvubxmxsr05qa29 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP drop constraint FK_k93m94nr77bbx2wwvisolk4vk if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_r1wyhg02boe5ptr7ga47efn8m if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP drop constraint FK_c7qlkk4o48tj7yqp0d54b986r if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_14ln1v4pohujkoke61dwd7tr5 if exists
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP drop constraint FK_29a7ov4gq0c7kw0r8jytxne7j if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_67gfyk0wfnpbq28bfgrt2i6ne if exists
DEBUG: org.hibernate.SQL - alter table Person_Address drop constraint FK_jetf8130vvvgu3dvgdtrxylif if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_797ib89nbicyy4f5gb2weoyh7 if exists
DEBUG: org.hibernate.SQL - alter table Person_Person drop constraint FK_inq4xm3i524cmia3rp65fx39w if exists
DEBUG: org.hibernate.SQL - drop table Address if exists
DEBUG: org.hibernate.SQL - drop table AddressNP if exists
DEBUG: org.hibernate.SQL - drop table BillingDetails if exists
DEBUG: org.hibernate.SQL - drop table Building if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP if exists
DEBUG: org.hibernate.SQL - drop table BuildingNP_floors if exists
DEBUG: org.hibernate.SQL - drop table Building_floors if exists
DEBUG: org.hibernate.SQL - drop table Company if exists
DEBUG: org.hibernate.SQL - drop table CompanyNP if exists
DEBUG: org.hibernate.SQL - drop table ContactInfo if exists
DEBUG: org.hibernate.SQL - drop table ContactInfoNP if exists
DEBUG: org.hibernate.SQL - drop table Person if exists
DEBUG: org.hibernate.SQL - drop table PersonNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_AddressNP if exists
DEBUG: org.hibernate.SQL - drop table PersonNP_PersonNP if exists
DEBUG: org.hibernate.SQL - drop table Person_Address if exists
DEBUG: org.hibernate.SQL - drop table Person_Person if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompany if exists
DEBUG: org.hibernate.SQL - drop table PrimitiveCompanyNP if exists
DEBUG: org.hibernate.SQL - create table Address (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table AddressNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BillingDetails (BILLING_DETAILS_TYPE varchar(31) not null, id bigint generated by default as identity, owner varchar(255), account varchar(255), bankName varchar(255), swift varchar(255), expMonth varchar(255), expYear varchar(255), number varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table Building (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP (id integer generated by default as identity, city varchar(255), moveInDate timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table BuildingNP_floors (BuildingNP_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Building_floors (Building_id integer not null, emergencyExits integer, units integer)
DEBUG: org.hibernate.SQL - create table Company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table CompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfo (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table ContactInfoNP (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table Person (id integer generated by default as identity, maritalStatus integer, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP (id integer generated by default as identity, name varchar(255), version integer, address_id integer, spouse_id integer, primary key (id))
DEBUG: org.hibernate.SQL - create table PersonNP_AddressNP (PersonNP_id integer not null, previousAddresses_id integer not null, primary key (PersonNP_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table PersonNP_PersonNP (PersonNP_id integer not null, children_id integer not null, primary key (PersonNP_id, children_id))
DEBUG: org.hibernate.SQL - create table Person_Address (Person_id integer not null, previousAddresses_id integer not null, primary key (Person_id, previousAddresses_id))
DEBUG: org.hibernate.SQL - create table Person_Person (Person_id integer not null, children_id integer not null, primary key (Person_id, children_id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompany (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table PrimitiveCompanyNP (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint UK_r1wyhg02boe5ptr7ga47efn8m  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint UK_67gfyk0wfnpbq28bfgrt2i6ne  unique (previousAddresses_id)
DEBUG: org.hibernate.SQL - alter table BuildingNP_floors add constraint FK_cweg3u10rrds7oaqslkjdmmbt foreign key (BuildingNP_id) references BuildingNP
DEBUG: org.hibernate.SQL - alter table Building_floors add constraint FK_hod3abnvtsegc4wip7d5w46le foreign key (Building_id) references Building
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_tagx64iglr1dxpalbgothv83r foreign key (address_id) references Address
DEBUG: org.hibernate.SQL - alter table Person add constraint FK_18fvr6kjabhwxtq2ceqvb7txh foreign key (spouse_id) references Person
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_hc9ilhwc8rkvubxmxsr05qa29 foreign key (address_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP add constraint FK_k93m94nr77bbx2wwvisolk4vk foreign key (spouse_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_r1wyhg02boe5ptr7ga47efn8m foreign key (previousAddresses_id) references AddressNP
DEBUG: org.hibernate.SQL - alter table PersonNP_AddressNP add constraint FK_c7qlkk4o48tj7yqp0d54b986r foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_14ln1v4pohujkoke61dwd7tr5 foreign key (children_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table PersonNP_PersonNP add constraint FK_29a7ov4gq0c7kw0r8jytxne7j foreign key (PersonNP_id) references PersonNP
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_67gfyk0wfnpbq28bfgrt2i6ne foreign key (previousAddresses_id) references Address
DEBUG: org.hibernate.SQL - alter table Person_Address add constraint FK_jetf8130vvvgu3dvgdtrxylif foreign key (Person_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_797ib89nbicyy4f5gb2weoyh7 foreign key (children_id) references Person
DEBUG: org.hibernate.SQL - alter table Person_Person add constraint FK_inq4xm3i524cmia3rp65fx39w foreign key (Person_id) references Person
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
INFO : org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@7a31ca20] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into AddressNP (id, city, moveInDate, rooms, state, street, zipcode) values (null, ?, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update PersonNP set address_id=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update PersonNP set address_id=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update PersonNP set address_id=?, name=?, spouse_id=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - insert into PersonNP_PersonNP (PersonNP_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP_PersonNP (PersonNP_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP_PersonNP (PersonNP_id, children_id) values (?, ?)
DEBUG: org.hibernate.SQL - insert into PersonNP_PersonNP (PersonNP_id, children_id) values (?, ?)
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@68631b1d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@5a48da4f : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@a0c5be : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6424e613 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@14efa279 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@8e99809 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@e62319f : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4d354a3e : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@24a0c58b : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@604d28c6 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@7f3c0399 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@183fc2fa : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@3a11c0eb : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@3313d477 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2c2c3947 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@4a62062a : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7ec08115 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@53dd42d6 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@1e76afeb : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@447fa959 : [number, expMonth, expYear, id, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@2c9d90fc : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@1511d157 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@418f890f : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@3d3c886f : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@7d66e544 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@666618d6 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@5b1c32e4 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2bab618 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@48bc2fce : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@1eca3ea7 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@24fba488 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@73a6cc79 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5a4d4f9c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@153d6d74 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6c9b44bf : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@299b9851 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@191a0351 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@67328bcb : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@51ba952e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@2416c658 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_, personnp0_.address_id as address_4_12_, personnp0_.name as name2_12_, personnp0_.spouse_id as spouse_i5_12_, personnp0_.version as version3_12_ from PersonNP personnp0_
DEBUG: org.hibernate.SQL - select addressnp0_.id as id1_1_0_, addressnp0_.city as city2_1_0_, addressnp0_.moveInDate as moveInDa3_1_0_, addressnp0_.rooms as rooms4_1_0_, addressnp0_.state as state5_1_0_, addressnp0_.street as street6_1_0_, addressnp0_.zipcode as zipcode7_1_0_ from AddressNP addressnp0_ where addressnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@2c6c302f is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@1ee5632d is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@7e49ded is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@39023dbf is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@2478b629 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a2ac487 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 1.0
      version = 1.0
      name = "Dad"
      spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 2.0
        version = 1.0
        name = "Mom"
        spouse = (Ref #2)
        address = null
        previousAddresses = null
        children = null
      address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
        id = 1.0
        street = "777 Techwood Drive"
        city = "Atlanta"
        state = "GA"
        zipcode = "30022"
        rooms = 5.0
        moveInDate = 2017-03-03 10:59:11.309
      previousAddresses = null
      children = null
    [1] = (Ref #3)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 3.0
      version = 1.0
      name = "Jack"
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 4.0
        version = 0.0
        name = "Lisa"
        spouse = (Ref #5)
        address = null
        previousAddresses = null
        children = null
      address = null
      previousAddresses = null
      children = null
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 5.0
      version = 0.0
      name = "Jill"
      spouse = null
      address = null
      previousAddresses = null
      children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 1.0
        version = 1.0
        name = "Dad"
        spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 2.0
          version = 1.0
          name = "Mom"
          spouse = (Ref #2)
          address = null
          previousAddresses = null
          children = null
        address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
          id = 1.0
          street = "777 Techwood Drive"
          city = "Atlanta"
          state = "GA"
          zipcode = "30022"
          rooms = 5.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
        previousAddresses = null
        children = null
      [1] = (Ref #3)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 4.0
          version = 0.0
          name = "Lisa"
          spouse = (Ref #5)
          address = null
          previousAddresses = null
          children = null
        address = null
        previousAddresses = null
        children = null
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1cd2143b, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@76216830 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@7aded903 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2db86a7c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@261f359f : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@5b02a984 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@57186526 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@391d1e33 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@66f16742 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@2871ac91 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@3c54ddec : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6d69a0d3 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@4f114b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@257f30f7 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@3fde2209 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@1f916219 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@67acfde9 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@3b088163 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@75882261 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@611d0763 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@615efd1c : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_, personnp0_.address_id as address_4_12_, personnp0_.name as name2_12_, personnp0_.spouse_id as spouse_i5_12_, personnp0_.version as version3_12_ from PersonNP personnp0_
DEBUG: org.hibernate.SQL - select addressnp0_.id as id1_1_0_, addressnp0_.city as city2_1_0_, addressnp0_.moveInDate as moveInDa3_1_0_, addressnp0_.rooms as rooms4_1_0_, addressnp0_.state as state5_1_0_, addressnp0_.street as street6_1_0_, addressnp0_.zipcode as zipcode7_1_0_ from AddressNP addressnp0_ where addressnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@35025a0a is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@372f0a99 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@2322e56f is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class org.springframework.flex.hibernate4.domain.PersonNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@7c70aae1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@38732364 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@48cd319d is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 1.0
      version = 1.0
      name = "Dad"
      spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 2.0
        version = 1.0
        name = "Mom"
        spouse = (Ref #2)
        address = null
        previousAddresses = null
        children = null
      address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
        id = 1.0
        street = "777 Techwood Drive"
        city = "Atlanta"
        state = "GA"
        zipcode = "30022"
        rooms = 5.0
        moveInDate = 2017-03-03 10:59:11.309
      previousAddresses = null
      children = null
    [1] = (Ref #3)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 3.0
      version = 1.0
      name = "Jack"
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 4.0
        version = 0.0
        name = "Lisa"
        spouse = (Ref #5)
        address = null
        previousAddresses = null
        children = null
      address = null
      previousAddresses = null
      children = null
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
      id = 5.0
      version = 0.0
      name = "Jill"
      spouse = null
      address = null
      previousAddresses = null
      children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 1.0
        version = 1.0
        name = "Dad"
        spouse = (Typed Object #3 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 2.0
          version = 1.0
          name = "Mom"
          spouse = (Ref #2)
          address = null
          previousAddresses = null
          children = null
        address = (Typed Object #4 'org.springframework.flex.hibernate4.domain.AddressNP')
          id = 1.0
          street = "777 Techwood Drive"
          city = "Atlanta"
          state = "GA"
          zipcode = "30022"
          rooms = 5.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
        previousAddresses = null
        children = null
      [1] = (Ref #3)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 4.0
          version = 0.0
          name = "Lisa"
          spouse = (Ref #5)
          address = null
          previousAddresses = null
          children = null
        address = null
        previousAddresses = null
        children = null
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1cd2143b, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1fb2eec, testMethod = deserializeAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4c18516 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@2a0b901c : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@3d104c9b : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6544899b : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@6da54910 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@1bd8afc8 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@24134cbc : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@65da01f4 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@22f02996 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7c8874ef : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@42c0a16e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@77a0dd63 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@543fe698 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@6b2fdffc : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2ca3d826 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5d194314 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@76396509 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@637c840d : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@51ac12ac : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@463afa6e : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1fb2eec, testMethod = deserializeAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@119290b9, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@640d604 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@62cbc478 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@5438fa43 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@512abf25 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@515ab3f2 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@6d0e45a5 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7e7740a5 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@7aa01bd9 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@7e61e25c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@615db358 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@256bb5be : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@5fef0c19 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@2e6d76ba : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@22a6d75c : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5a9840f3 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7d30007d : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@382d71c7 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2ca54da9 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@34a20f16 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@496cc217 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into ContactInfoNP (id, email, phone, version) values (null, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@119290b9, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@6c951ada, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@67b61834 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3b0d3a63 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@50598a1a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@14de1901 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@437ed416 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@11f23038 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@de77146 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@691567ea : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5cfed0ba : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@5c8d58ed : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6a567f7b : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@28be7fec : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@26f0141 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@34136bd1 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6de7778f : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@367d34c0 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4ce25e47 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6380e9e9 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@350da119 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@6a09484c : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into PersonNP (id, address_id, name, spouse_id, version) values (null, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update PersonNP set address_id=?, name=?, spouse_id=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@6c951ada, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1788cb61, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@16d431b4 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6c0b51da : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@7558633 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5657967b : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@61394494 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@578a5ce8 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7c453c34 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@16cb9989 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@3dfd6220 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@3815146b : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6de43bc1 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@27a9f025 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@71936a92 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@61359e87 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@2dc39b53 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@45037e16 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@2f2e4bde : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6222391a : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@538a2f0e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@d2708a7 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into ContactInfoNP (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update ContactInfoNP set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@1788cb61, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@2fd9fb34, testMethod = deserializeAndPersistNewXMLMappedEntityWithVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1595d2b2 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@20349058 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@6cbb7a7d : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@cdb3c85 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@37606fee : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@33d28f0a : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@48d739f : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@51e7589f : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@65cc5252 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@42c12b3e : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@2dbfa972 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@46f73ffa : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@41aebbb4 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@afde064 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5a592c70 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@252ec02e : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@11e9ac24 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@74f280bd : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@675b18ff : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@34279b8a : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into CompanyNP (id, version, name) values (null, ?, ?)
DEBUG: org.hibernate.SQL - update CompanyNP set version=?, name=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@2fd9fb34, testMethod = deserializeAndPersistNewXMLMappedEntityWithVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@636985df, testMethod = deserializeAndPersistNewXMLMappedEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@6f91fbda : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@723e3c17 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@4ffced4e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6094de13 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@bbb6f0 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@3e6ec74 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@2bd8f7db : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6d7ad0f5 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@30abf79c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@49a38b1 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@681061d6 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@53d6e959 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@3caee3a8 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@69a40b3c : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@251c90f : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@6629643d : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@2dd178f3 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@64656b9e : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@6870cfac : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@45554613 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - insert into PrimitiveCompanyNP (id, version, name) values (null, ?, ?)
DEBUG: org.hibernate.SQL - update PrimitiveCompanyNP set version=?, name=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@636985df, testMethod = deserializeAndPersistNewXMLMappedEntityWithPrimitiveVersion@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@6314df3c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@5785e813 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@10b8b900 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6d294ddc : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@2801827a : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@50bc3219 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@599f1b7 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@22791b75 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@64f4f12 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@37d28938 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@7d0cd23c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@17c4dc5b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6b0f266e : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4837f97e : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@53314f76 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@62a6674f : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@70881123 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@703fa45 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@5e905f2c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@fddd7ae : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@43d76a92 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@1a914089 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.309
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@5d7dd549 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@486bd064 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@6459f4ea : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@740b9a50 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@476fde05 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@5111de7c : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7ac48e10 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@52354202 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@6b1321b7 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@342ee097 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6ac45c0c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@12192604 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6075b369 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@231cdda8 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6b70d1fb : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@3002e397 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7da1e005 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@38159384 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@55877274 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@723e2d08 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@130cfc47 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@79df80a4 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Result from Logger:
flex.messaging.io.amf.MessageBody
  data = org.springframework.flex.hibernate4.domain.PersonNP
    id = 1
    version = 1
    name = Dad
    spouse = null
    address = org.springframework.flex.hibernate4.domain.AddressNP
      id = 1
      street = 777 Techwood Drive
      city = Atlanta
      state = GA
      zipcode = 30022
      rooms = 5
      moveInDate = 2017-03-03 10:59:11.309

    previousAddresses = null
    children = null

  responseURI = 
  replyMethod = 
  targetURI = 

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@7d59e968, testMethod = serializationInsideTransactionAfterHibernateGet@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@55361f03 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@581c9bb7 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@138f0661 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@212fafd1 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@448462f0 : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@787988f4 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@132e3594 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@4f235107 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@28d739f1 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@1c5d3a37 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@7e3d2ebd : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@2b43f314 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@3a4a5f3c : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4f3356c0 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@586cc15d : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@6c835217 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4584304 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@51888019 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@6f50d55c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@19b5214b : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@1332dec4 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@23bd0c81 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.309
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@7d59e968, testMethod = serializationInsideTransactionAfterHibernateGet@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@26da1ba2 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@3820cfe : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2407a36c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5ec9eefa : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@28b8f98a : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@3b4ef59f : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@22cb3d59 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@33e4b9c4 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5cff729b : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@10d18696 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@6b8b5020 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@7d37ee0c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5a7b309b : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@4602f874 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@7739aac4 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@353c6da1 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@36c07c75 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@6750e381 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@5d850a25 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@b022551 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.hibernate.SQL - select children0_.PersonNP_id as PersonNP1_12_0_, children0_.children_id as children2_14_0_, personnp1_.id as id1_12_1_, personnp1_.address_id as address_4_12_1_, personnp1_.name as name2_12_1_, personnp1_.spouse_id as spouse_i5_12_1_, personnp1_.version as version3_12_1_, addressnp2_.id as id1_1_2_, addressnp2_.city as city2_1_2_, addressnp2_.moveInDate as moveInDa3_1_2_, addressnp2_.rooms as rooms4_1_2_, addressnp2_.state as state5_1_2_, addressnp2_.street as street6_1_2_, addressnp2_.zipcode as zipcode7_1_2_ from PersonNP_PersonNP children0_ inner join PersonNP personnp1_ on children0_.children_id=personnp1_.id left outer join AddressNP addressnp2_ on personnp1_.address_id=addressnp2_.id where children0_.PersonNP_id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@29bbc391 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@31ab1e67 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@67f946c3 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@43c7fe8a is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.309
  previousAddresses = null
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 5.0
          version = 0.0
          name = "Jill"
          spouse = null
          address = null
          previousAddresses = null
          children = null
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 3.0
          version = 1.0
          name = "Jack"
          spouse = null
          address = null
          previousAddresses = null
          children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@75e80a97, testMethod = serializationInsideTransactionAfterHibernateGetAndInitializedCollection@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@5b8853 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@1b8aaeab : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@5d1bdd4a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6812c8cc : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@3457cc8d : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@7a66c35a : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7994a0d1 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@73e4387 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@d87d449 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4137aab0 : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@1df9186f : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@682e422c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5bb8e6fc : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@2726a511 : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@72c9ebfa : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@686cf8ad : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@747f6c5a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@66e341e9 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@5b48f0f4 : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@546ed2a0 : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.hibernate.SQL - select children0_.PersonNP_id as PersonNP1_12_0_, children0_.children_id as children2_14_0_, personnp1_.id as id1_12_1_, personnp1_.address_id as address_4_12_1_, personnp1_.name as name2_12_1_, personnp1_.spouse_id as spouse_i5_12_1_, personnp1_.version as version3_12_1_, addressnp2_.id as id1_1_2_, addressnp2_.city as city2_1_2_, addressnp2_.moveInDate as moveInDa3_1_2_, addressnp2_.rooms as rooms4_1_2_, addressnp2_.state as state5_1_2_, addressnp2_.street as street6_1_2_, addressnp2_.zipcode as zipcode7_1_2_ from PersonNP_PersonNP children0_ inner join PersonNP personnp1_ on children0_.children_id=personnp1_.id left outer join AddressNP addressnp2_ on personnp1_.address_id=addressnp2_.id where children0_.PersonNP_id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@19662208 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@3bbf1c0d is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@6b867ee7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@656842bc is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.309
  previousAddresses = null
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 5.0
        version = 0.0
        name = "Jill"
        spouse = null
        address = null
        previousAddresses = null
        children = null
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
        id = 3.0
        version = 1.0
        name = "Jack"
        spouse = null
        address = null
        previousAddresses = null
        children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 5.0
          version = 0.0
          name = "Jill"
          spouse = null
          address = null
          previousAddresses = null
          children = null
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.PersonNP')
          id = 3.0
          version = 1.0
          name = "Jack"
          spouse = null
          address = null
          previousAddresses = null
          children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@75e80a97, testMethod = serializationInsideTransactionAfterHibernateGetAndInitializedCollection@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@18ffca6c, testMethod = serializationInsideTransactionAfterHibernateLoad@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@601d6622]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.HibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@46468f0 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@5f8f1712 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@34a6d9db : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@52ecc989 : [street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@756808cc : [account, bankName, swift, id, owner]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@52f8a6f4 : [id, version, name, spouse, address, previousAddresses, children, maritalStatus]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@5012c571 : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6486fe7b : [id, address, floors]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@511da44f : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4645679e : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@3a0b6a : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@539c4830 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6f1fa1d0 : [units, embeddedFloorAttributes]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@28b523a : [id, version, name, spouse, address, previousAddresses, children]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@52ba685a : [id, version, phone, email]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@63d677f5 : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@71d55b7e : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2997ddfc : [id, street, city, state, zipcode, rooms, moveInDate]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@28ee882c : [id, version, name]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@78d73b1b : [number, expMonth, expYear, id, owner]
DEBUG: org.hibernate.SQL - select personnp0_.id as id1_12_0_, personnp0_.address_id as address_4_12_0_, personnp0_.name as name2_12_0_, personnp0_.spouse_id as spouse_i5_12_0_, personnp0_.version as version3_12_0_, addressnp1_.id as id1_1_1_, addressnp1_.city as city2_1_1_, addressnp1_.moveInDate as moveInDa3_1_1_, addressnp1_.rooms as rooms4_1_1_, addressnp1_.state as state5_1_1_, addressnp1_.street as street6_1_1_, addressnp1_.zipcode as zipcode7_1_1_ from PersonNP personnp0_ left outer join AddressNP addressnp1_ on personnp0_.address_id=addressnp1_.id where personnp0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class org.springframework.flex.hibernate4.domain.PersonNP_$$_jvst444_e
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class org.springframework.flex.hibernate4.domain.AddressNP
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.AddressNP@1eeb5818 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.PersonNP@29d070c7 is class org.hibernate.collection.internal.PersistentSet
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
  id = 1.0
  version = 1.0
  name = "Dad"
  spouse = null
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
    id = 1.0
    street = "777 Techwood Drive"
    city = "Atlanta"
    state = "GA"
    zipcode = "30022"
    rooms = 5.0
    moveInDate = 2017-03-03 10:59:11.309
  previousAddresses = null
  children = null

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.PersonNP')
    id = 1.0
    version = 1.0
    name = "Dad"
    spouse = null
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.AddressNP')
      id = 1.0
      street = "777 Techwood Drive"
      city = "Atlanta"
      state = "GA"
      zipcode = "30022"
      rooms = 5.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
    previousAddresses = null
    children = null

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@492be039 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests@18ffca6c, testMethod = serializationInsideTransactionAfterHibernateLoad@SpringPropertyProxyHibernateNativeFieldAccessTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1118d539 testClass = SpringPropertyProxyHibernateNativeFieldAccessTests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-np-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.243 sec - in org.springframework.flex.hibernate4.SpringPropertyProxyHibernateNativeFieldAccessTests
Running org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests
INFO : org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@c48b543, org.springframework.test.context.transaction.TransactionalTestExecutionListener@75793f17, org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests$InternalDbTestExecutionListener@4652c74d]
INFO : org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/flex/hibernate4/hibernate-jpa-context.xml]
INFO : org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@4cc12db2: startup date [Fri Mar 03 10:59:11 BRT 2017]; root of context hierarchy
INFO : org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'dataSource'
INFO : org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader - persistence.xml should be located inside META-INF directory; cannot determine persistence unit root URL for class path resource [org/springframework/flex/hibernate4/persistence.xml]
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'persistenceUnit'
WARN : org.hibernate.ejb.HibernatePersistence - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
INFO : org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: persistenceUnit
	...]
WARN : org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
INFO : org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG: org.hibernate.SQL - alter table building_floors drop constraint FK_2c0ty5ivfopn51g7p24fw9ul4 if exists
DEBUG: org.hibernate.SQL - alter table buildingnp_floors drop constraint FK_15prgsxuvi23251bfw2d0u0cp if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_9lphfhlj4p0j4kvwdbtep6451 if exists
DEBUG: org.hibernate.SQL - alter table person drop constraint FK_ovc13dey9im6vxni2jhnojepb if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_s63x0jpx5lkvtvumwlhiju41 if exists
DEBUG: org.hibernate.SQL - alter table person_children drop constraint FK_tgu9qrbwurlwskv1l54c79yyi if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_94wm7whrafkpk41bpru1eiuat if exists
DEBUG: org.hibernate.SQL - alter table person_previous_addresses drop constraint FK_36ii39l6ibc38l4nvu8su27n3 if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_pqicitxxnyvk2wwewy0a9lign if exists
DEBUG: org.hibernate.SQL - alter table personnp drop constraint FK_92o13isbur3a3foihu917dajx if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_82walxmfmpjv7pelofc9j8754 if exists
DEBUG: org.hibernate.SQL - alter table personnp_children drop constraint FK_95frpehn1jmqp0q76x57o9hgb if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_tkkwe07i7nuv2ta4icr4us9pc if exists
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses drop constraint FK_ow0xsnwf8xne5el1mkxc8lnmv if exists
DEBUG: org.hibernate.SQL - drop table address if exists
DEBUG: org.hibernate.SQL - drop table addressnp if exists
DEBUG: org.hibernate.SQL - drop table billing_details if exists
DEBUG: org.hibernate.SQL - drop table building if exists
DEBUG: org.hibernate.SQL - drop table building_floors if exists
DEBUG: org.hibernate.SQL - drop table buildingnp if exists
DEBUG: org.hibernate.SQL - drop table buildingnp_floors if exists
DEBUG: org.hibernate.SQL - drop table company if exists
DEBUG: org.hibernate.SQL - drop table companynp if exists
DEBUG: org.hibernate.SQL - drop table contact_info if exists
DEBUG: org.hibernate.SQL - drop table contact_infonp if exists
DEBUG: org.hibernate.SQL - drop table person if exists
DEBUG: org.hibernate.SQL - drop table person_children if exists
DEBUG: org.hibernate.SQL - drop table person_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table personnp if exists
DEBUG: org.hibernate.SQL - drop table personnp_children if exists
DEBUG: org.hibernate.SQL - drop table personnp_previous_addresses if exists
DEBUG: org.hibernate.SQL - drop table primitive_company if exists
DEBUG: org.hibernate.SQL - drop table primitive_companynp if exists
DEBUG: org.hibernate.SQL - create table address (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table addressnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table billing_details (billing_details_type varchar(31) not null, id bigint generated by default as identity, owner varchar(255), exp_month varchar(255), exp_year varchar(255), number varchar(255), account varchar(255), bank_name varchar(255), swift varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table building_floors (building integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table buildingnp (id integer generated by default as identity, city varchar(255), move_in_date timestamp, rooms integer, state varchar(255), street varchar(255), zipcode varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table buildingnp_floors (buildingnp integer not null, emergency_exits integer, units integer)
DEBUG: org.hibernate.SQL - create table company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table contact_info (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table contact_infonp (id integer generated by default as identity, email varchar(255), phone varchar(255), version integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person (id integer generated by default as identity, marital_status integer, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table person_children (person integer not null, children integer not null, primary key (person, children))
DEBUG: org.hibernate.SQL - create table person_previous_addresses (person integer not null, previous_addresses integer not null, primary key (person, previous_addresses))
DEBUG: org.hibernate.SQL - create table personnp (id integer generated by default as identity, name varchar(255), version integer, address integer, spouse integer, primary key (id))
DEBUG: org.hibernate.SQL - create table personnp_children (personnp integer not null, children integer not null, primary key (personnp, children))
DEBUG: org.hibernate.SQL - create table personnp_previous_addresses (personnp integer not null, previous_addresses integer not null, primary key (personnp, previous_addresses))
DEBUG: org.hibernate.SQL - create table primitive_company (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - create table primitive_companynp (id integer generated by default as identity, version integer not null, name varchar(255), primary key (id))
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint UK_94wm7whrafkpk41bpru1eiuat  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint UK_tkkwe07i7nuv2ta4icr4us9pc  unique (previous_addresses)
DEBUG: org.hibernate.SQL - alter table building_floors add constraint FK_2c0ty5ivfopn51g7p24fw9ul4 foreign key (building) references building
DEBUG: org.hibernate.SQL - alter table buildingnp_floors add constraint FK_15prgsxuvi23251bfw2d0u0cp foreign key (buildingnp) references buildingnp
DEBUG: org.hibernate.SQL - alter table person add constraint FK_9lphfhlj4p0j4kvwdbtep6451 foreign key (address) references address
DEBUG: org.hibernate.SQL - alter table person add constraint FK_ovc13dey9im6vxni2jhnojepb foreign key (spouse) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_s63x0jpx5lkvtvumwlhiju41 foreign key (children) references person
DEBUG: org.hibernate.SQL - alter table person_children add constraint FK_tgu9qrbwurlwskv1l54c79yyi foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_94wm7whrafkpk41bpru1eiuat foreign key (previous_addresses) references address
DEBUG: org.hibernate.SQL - alter table person_previous_addresses add constraint FK_36ii39l6ibc38l4nvu8su27n3 foreign key (person) references person
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_pqicitxxnyvk2wwewy0a9lign foreign key (address) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp add constraint FK_92o13isbur3a3foihu917dajx foreign key (spouse) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_82walxmfmpjv7pelofc9j8754 foreign key (children) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_children add constraint FK_95frpehn1jmqp0q76x57o9hgb foreign key (personnp) references personnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_tkkwe07i7nuv2ta4icr4us9pc foreign key (previous_addresses) references addressnp
DEBUG: org.hibernate.SQL - alter table personnp_previous_addresses add constraint FK_ow0xsnwf8xne5el1mkxc8lnmv foreign key (personnp) references personnp
INFO : org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
WARN : org.hibernate.jpa.internal.EntityManagerFactoryRegistry - HHH000436: Entity manager factory name (persistenceUnit) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into address (id, city, move_in_date, rooms, state, street, zipcode) values (null, ?, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update person set address=?, marital_status=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update person set address=?, marital_status=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - update person set address=?, marital_status=?, name=?, spouse=?, version=? where id=? and version=?
DEBUG: org.hibernate.SQL - insert into person_children (person, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into person_children (person, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into person_children (person, children) values (?, ?)
DEBUG: org.hibernate.SQL - insert into person_children (person, children) values (?, ?)
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@175581eb, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@782fd504 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@1537c744 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@37314843 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@50122012 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@569348e1 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@7db5b890 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@407b8435 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@1282e98 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@4db0ba1c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@1d91fa02 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@1578fa9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@414b2df5 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@9e30f9a : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@1b30a54e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@26275b46 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@3e9beef2 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@2f15a964 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@3111631d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2d70f312 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@4c7d7430 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_, person0_.address as address5_11_, person0_.marital_status as marital_2_11_, person0_.name as name3_11_, person0_.spouse as spouse6_11_, person0_.version as version4_11_ from person person0_
DEBUG: org.hibernate.SQL - select address0_.id as id1_0_0_, address0_.city as city2_0_0_, address0_.move_in_date as move_in_3_0_0_, address0_.rooms as rooms4_0_0_, address0_.state as state5_0_0_, address0_.street as street6_0_0_, address0_.zipcode as zipcode7_0_0_ from address address0_ where address0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@133aacbe is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@5fe46d52 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@3a9b41a0 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@21f9c6ea is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@448ade1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@418f0534 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
      address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
        city = "Atlanta"
        id = 1.0
        moveInDate = 2017-03-03 10:59:11.526
        rooms = 5.0
        state = "GA"
        street = "777 Techwood Drive"
        zipcode = "30022"
      children = null
      id = 1.0
      maritalStatus = "MARRIED"
      name = "Dad"
      previousAddresses = null
      spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 2.0
        maritalStatus = "MARRIED"
        name = "Mom"
        previousAddresses = null
        spouse = (Ref #2)
        version = 1.0
      version = 1.0
    [1] = (Ref #4)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 3.0
      maritalStatus = "MARRIED"
      name = "Jack"
      previousAddresses = null
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 4.0
        maritalStatus = "MARRIED"
        name = "Lisa"
        previousAddresses = null
        spouse = (Ref #5)
        version = 0.0
      version = 1.0
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 5.0
      maritalStatus = "SINGLE"
      name = "Jill"
      previousAddresses = null
      spouse = null
      version = 0.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
        address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
          city = "Atlanta"
          id = 1.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
          rooms = 5.0
          state = "GA"
          street = "777 Techwood Drive"
          zipcode = "30022"
        children = null
        id = 1.0
        maritalStatus = "MARRIED"
        name = "Dad"
        previousAddresses = null
        spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 2.0
          maritalStatus = "MARRIED"
          name = "Mom"
          previousAddresses = null
          spouse = (Ref #2)
          version = 1.0
        version = 1.0
      [1] = (Ref #4)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = "MARRIED"
        name = "Jack"
        previousAddresses = null
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 4.0
          maritalStatus = "MARRIED"
          name = "Lisa"
          previousAddresses = null
          spouse = (Ref #5)
          version = 0.0
        version = 1.0
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = "SINGLE"
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@175581eb, testMethod = serializationInsideTransactionAfterHibernateQuery@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@27c53c32, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@68aec50 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6aff97d6 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@1d60059f : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@134a8ead : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@427308f8 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@54247647 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@4975dda1 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@e0d1dc4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5463f035 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@230232b0 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@44fd7ba4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@22f8adc2 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@69d103f0 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5b742bc8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@74fb5b59 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@130a6eb9 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@722531ab : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@8f57e4c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@26fadd98 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@66451058 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into contact_info (id, email, phone, version) values (null, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@27c53c32, testMethod = deserializeAndPersistNewEntityWithPrimitiveNumericAutogeneratedId@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@2baac4a7, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@23ad2d17 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6bce4140 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@25f0c5e7 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5882b202 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@120df990 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@b506ed0 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@282c4da0 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@65f3e805 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@18cf5c52 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@10618775 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@5aea8994 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@20a3e10c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@426c0486 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5e2a6991 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5002fde9 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@6f96dd64 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@4d7cac24 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@409732fb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@73d62b5 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@5e99e2cb : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update person set address=?, marital_status=?, name=?, spouse=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@2baac4a7, testMethod = deserializeAndPersistNewEntityWithVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@4466cf5d, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@2c60ce47 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@2450256f : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@59918c8f : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@2b7facc7 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1c74d19 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@24197b13 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@71b97eeb : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2776fd8f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@1c62c3fd : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@734ce281 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@49b89425 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@59328218 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5345dfe8 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@478967eb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4a1dda83 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7f2b39a : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7a358613 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@760f1081 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@52621501 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@401e02b4 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into contact_info (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update contact_info set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@4466cf5d, testMethod = deserializeAndPersistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@14457a95 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@48567727 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@10e9a5fe : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@259287ac : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1abcd059 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@61a87366 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@3c33fcf8 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@dada335 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@716f94c1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@53feeac9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@70091872 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@105db94d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@1d99ee1b : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@3915e7c3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@167a21b : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@7c0df4ab : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@2e362407 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@388be5fd : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@440ef8d : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@17fbfb02 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address as address5_11_0_, person0_.marital_status as marital_2_11_0_, person0_.name as name3_11_0_, person0_.spouse as spouse6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.move_in_date as move_in_3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from person person0_ left outer join address address1_ on person0_.address=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@3b170235 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@24e5389c is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:11.526
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = "MARRIED"
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = "MARRIED"
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@4ae8fb2a, testMethod = serializationInsideTransactionAfterFind@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@54326e9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@20216016 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2b441e56 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@267891bf : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@3a109ff7 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@111a7973 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@1a2773a8 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@78b0ec3a : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@46612bfc : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4f213a2 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@25699aa7 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@5a47730c : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@15369d73 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@1cde374 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6818fd48 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@9263c54 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@28daf506 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@4662752a : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@693f2213 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@514377fc : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address as address5_11_0_, person0_.marital_status as marital_2_11_0_, person0_.name as name3_11_0_, person0_.spouse as spouse6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.move_in_date as move_in_3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from person person0_ left outer join address address1_ on person0_.address=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@21d9cd04 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@6befbb12 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:11.526
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = "MARRIED"
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = "MARRIED"
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@4ae8fb2a, testMethod = serializationInsideTransactionAfterFind@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7ac48f05 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@7af1d072 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@27ffd9f8 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@642c6461 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@3ace6346 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4e48462d : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@17216605 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@10a907ec : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@59b492ec : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@55c1ced9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@49cc9b2a : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@11826398 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@6c5ca0b6 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@37b01ce2 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@1a88c4f5 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@1894fa9f : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@1144a02b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@26a4f9ed : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7a572ea0 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@45287377 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address as address5_11_0_, person0_.marital_status as marital_2_11_0_, person0_.name as name3_11_0_, person0_.spouse as spouse6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.move_in_date as move_in_3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from person person0_ left outer join address address1_ on person0_.address=address1_.id where person0_.id=?
DEBUG: org.hibernate.SQL - select children0_.person as person1_11_0_, children0_.children as children2_12_0_, person1_.id as id1_11_1_, person1_.address as address5_11_1_, person1_.marital_status as marital_2_11_1_, person1_.name as name3_11_1_, person1_.spouse as spouse6_11_1_, person1_.version as version4_11_1_, address2_.id as id1_0_2_, address2_.city as city2_0_2_, address2_.move_in_date as move_in_3_0_2_, address2_.rooms as rooms4_0_2_, address2_.state as state5_0_2_, address2_.street as street6_0_2_, address2_.zipcode as zipcode7_0_2_ from person_children children0_ inner join person person1_ on children0_.children=person1_.id left outer join address address2_ on person1_.address=address2_.id where children0_.person=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@a316f6b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@62e73ab6 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@5d7f8467 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@35e74e08 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:11.526
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = "MARRIED"
        name = "Jack"
        previousAddresses = null
        spouse = null
        version = 1.0
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = "SINGLE"
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0
  id = 1.0
  maritalStatus = "MARRIED"
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 3.0
          maritalStatus = "MARRIED"
          name = "Jack"
          previousAddresses = null
          spouse = null
          version = 1.0
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 5.0
          maritalStatus = "SINGLE"
          name = "Jill"
          previousAddresses = null
          spouse = null
          version = 0.0
    id = 1.0
    maritalStatus = "MARRIED"
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@7ae590f6, testMethod = serializationInsideTransactionAfterFindAndInitializedCollection@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7ab63838 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@4e974b9e : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@370c7cc5 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@61b838f2 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@2a04ab05 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@5ebbde60 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@a056b26 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@2a5abd3c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@250967f1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@25c1f5ee : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@4bce62b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@7bf018dd : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@15a8cebd : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@3f6c2763 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@5c82031b : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@274fdea6 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@74c121d4 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2a484710 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@661e1399 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@3ffd4b12 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address as address5_11_0_, person0_.marital_status as marital_2_11_0_, person0_.name as name3_11_0_, person0_.spouse as spouse6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.move_in_date as move_in_3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from person person0_ left outer join address address1_ on person0_.address=address1_.id where person0_.id=?
DEBUG: org.hibernate.SQL - select children0_.person as person1_11_0_, children0_.children as children2_12_0_, person1_.id as id1_11_1_, person1_.address as address5_11_1_, person1_.marital_status as marital_2_11_1_, person1_.name as name3_11_1_, person1_.spouse as spouse6_11_1_, person1_.version as version4_11_1_, address2_.id as id1_0_2_, address2_.city as city2_0_2_, address2_.move_in_date as move_in_3_0_2_, address2_.rooms as rooms4_0_2_, address2_.state as state5_0_2_, address2_.street as street6_0_2_, address2_.zipcode as zipcode7_0_2_ from person_children children0_ inner join person person1_ on children0_.children=person1_.id left outer join address address2_ on person1_.address=address2_.id where children0_.person=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@69b3886f is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@482ba4b1 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@59e7564b is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@3cc3f13e is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:11.526
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
    source = (Array #3)
      [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = "SINGLE"
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0
      [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = "MARRIED"
        name = "Jack"
        previousAddresses = null
        spouse = null
        version = 1.0
  id = 1.0
  maritalStatus = "MARRIED"
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = (Typed Object #2 'flex.messaging.io.ArrayCollection')
      source = (Array #3)
        [0] = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 5.0
          maritalStatus = "SINGLE"
          name = "Jill"
          previousAddresses = null
          spouse = null
          version = 0.0
        [1] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 3.0
          maritalStatus = "MARRIED"
          name = "Jack"
          previousAddresses = null
          spouse = null
          version = 1.0
    id = 1.0
    maritalStatus = "MARRIED"
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@7ae590f6, testMethod = serializationInsideTransactionAfterFindAndInitializedCollection@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@23564dd2 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@54895681 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@2dd0a0d0 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@6bf570c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1796b2d4 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@935d3f9 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@214b342f : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@5db0003d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@7f12094d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@589fb74d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@200d1a3d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@7de147e9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@12567179 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@37d699a1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@7f42b194 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@8eb6f9a : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@29170a47 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2a8f8555 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@402b4f81 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@13ef7fa1 : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@267ff4df, testMethod = serializationInsideTransactionAfterGetReference@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7c4b5ceb : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@6c07add6 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@e26a3df : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@57a667c8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@712cd5d3 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@2094bf3d : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@1b17d8ab : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@7f6b7426 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@687eb455 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@6d969330 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@4861cca9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@6c8f4bc7 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@714e861f : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@28989415 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@6eda012b : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@781dbe44 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@7d66a126 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@1132baa3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2fdf22f7 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@3a2546d6 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_0_, person0_.address as address5_11_0_, person0_.marital_status as marital_2_11_0_, person0_.name as name3_11_0_, person0_.spouse as spouse6_11_0_, person0_.version as version4_11_0_, address1_.id as id1_0_1_, address1_.city as city2_0_1_, address1_.move_in_date as move_in_3_0_1_, address1_.rooms as rooms4_0_1_, address1_.state as state5_0_1_, address1_.street as street6_0_1_, address1_.zipcode as zipcode7_0_1_ from person person0_ left outer join address address1_ on person0_.address=address1_.id where person0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@57e03347 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class org.springframework.flex.hibernate4.domain.Person_$$_jvst444_9
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@307c59ea is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
    city = "Atlanta"
    id = 1.0
    moveInDate = 2017-03-03 10:59:11.526
    rooms = 5.0
    state = "GA"
    street = "777 Techwood Drive"
    zipcode = "30022"
  children = null
  id = 1.0
  maritalStatus = "MARRIED"
  name = "Dad"
  previousAddresses = null
  spouse = null
  version = 1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = (Typed Object #1 'org.springframework.flex.hibernate4.domain.Address')
      city = "Atlanta"
      id = 1.0
      moveInDate = Fri Mar 03 10:59:11 BRT 2017
      rooms = 5.0
      state = "GA"
      street = "777 Techwood Drive"
      zipcode = "30022"
    children = null
    id = 1.0
    maritalStatus = "MARRIED"
    name = "Dad"
    previousAddresses = null
    spouse = null
    version = 1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@267ff4df, testMethod = serializationInsideTransactionAfterGetReference@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@7772d266 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@a21c74 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@b8a144e : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5fb8dc01 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@3e38c472 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@2ee92e7d : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@759a678a : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@6cdbe5ec : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@14b8a751 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@7345f97d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@554566a8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@66020d69 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@3751acd7 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@6b832551 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@150d6eaf : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@63124022 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@591f6f83 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2b44605c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@55421b8d : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@24a04257 : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - select person0_.id as id1_11_, person0_.address as address5_11_, person0_.marital_status as marital_2_11_, person0_.name as name3_11_, person0_.spouse as spouse6_11_, person0_.version as version4_11_ from person person0_
DEBUG: org.hibernate.SQL - select address0_.id as id1_0_0_, address0_.city as city2_0_0_, address0_.move_in_date as move_in_3_0_0_, address0_.rooms as rooms4_0_0_, address0_.state as state5_0_0_, address0_.street as street6_0_0_, address0_.zipcode as zipcode7_0_0_ from address address0_ where address0_.id=?
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class org.springframework.flex.hibernate4.domain.Address
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'city' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'moveInDate' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.sql.Timestamp
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'rooms' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'state' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'street' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'zipcode' on instance org.springframework.flex.hibernate4.domain.Address@1ab53860 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@611c3eae is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@6d6039df is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class org.springframework.flex.hibernate4.domain.Person
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@7b3cbe6e is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@13e00016 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class org.springframework.flex.hibernate4.domain.MaritalStatus
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class org.hibernate.collection.internal.PersistentSet
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@177ede17 is class java.lang.Integer
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'flex.messaging.io.ArrayCollection')
  source = (Array #1)
    [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
      address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
        city = "Atlanta"
        id = 1.0
        moveInDate = 2017-03-03 10:59:11.526
        rooms = 5.0
        state = "GA"
        street = "777 Techwood Drive"
        zipcode = "30022"
      children = null
      id = 1.0
      maritalStatus = "MARRIED"
      name = "Dad"
      previousAddresses = null
      spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 2.0
        maritalStatus = "MARRIED"
        name = "Mom"
        previousAddresses = null
        spouse = (Ref #2)
        version = 1.0
      version = 1.0
    [1] = (Ref #4)
    [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 3.0
      maritalStatus = "MARRIED"
      name = "Jack"
      previousAddresses = null
      spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 4.0
        maritalStatus = "MARRIED"
        name = "Lisa"
        previousAddresses = null
        spouse = (Ref #5)
        version = 0.0
      version = 1.0
    [3] = (Ref #6)
    [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
      address = null
      children = null
      id = 5.0
      maritalStatus = "SINGLE"
      name = "Jill"
      previousAddresses = null
      spouse = null
      version = 0.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'flex.messaging.io.ArrayCollection')
    source = (Array #1)
      [0] = (Typed Object #2 'org.springframework.flex.hibernate4.domain.Person')
        address = (Typed Object #3 'org.springframework.flex.hibernate4.domain.Address')
          city = "Atlanta"
          id = 1.0
          moveInDate = Fri Mar 03 10:59:11 BRT 2017
          rooms = 5.0
          state = "GA"
          street = "777 Techwood Drive"
          zipcode = "30022"
        children = null
        id = 1.0
        maritalStatus = "MARRIED"
        name = "Dad"
        previousAddresses = null
        spouse = (Typed Object #4 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 2.0
          maritalStatus = "MARRIED"
          name = "Mom"
          previousAddresses = null
          spouse = (Ref #2)
          version = 1.0
        version = 1.0
      [1] = (Ref #4)
      [2] = (Typed Object #5 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 3.0
        maritalStatus = "MARRIED"
        name = "Jack"
        previousAddresses = null
        spouse = (Typed Object #6 'org.springframework.flex.hibernate4.domain.Person')
          address = null
          children = null
          id = 4.0
          maritalStatus = "MARRIED"
          name = "Lisa"
          previousAddresses = null
          spouse = (Ref #5)
          version = 0.0
        version = 1.0
      [3] = (Ref #6)
      [4] = (Typed Object #7 'org.springframework.flex.hibernate4.domain.Person')
        address = null
        children = null
        id = 5.0
        maritalStatus = "SINGLE"
        name = "Jill"
        previousAddresses = null
        spouse = null
        version = 0.0

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@b5d9f1e, testMethod = setValueAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@350ff014 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@401317a0 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@3f866f50 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5844a2d1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1201769d : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4af7dd6a : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@4607d78b : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@3b28b7b0 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@22048bd6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@566c1e71 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@2e2f20b8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@504497fa : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5618fc1f : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@60b1ff3b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@374c3975 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@43c39321 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@52aa7742 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@3d0d120b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@6b5c134e : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@34d9df9f : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@b5d9f1e, testMethod = setValueAndPersistNewEntityWithNumericAutogeneratedId@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@1192c925 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@615b5480 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@24691c5 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7b91d9f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@6537ac : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@3b218c74 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@ddffa6c : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@42c54bad : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@6bb4cc0e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@5cc1bf20 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@2e3f324e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@46cf8c07 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@b56ec6c : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@5abf6a99 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@dc59ec2 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@375084c9 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@bd93bc3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@2a136383 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@b01cb8d : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@38c460e8 : [expMonth, expYear, id, number, owner]
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'address' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'children' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'maritalStatus' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'name' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'previousAddresses' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'spouse' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.Person@7a814310 is null
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
  address = null
  children = null
  id = NaN
  maritalStatus = null
  name = "Bob"
  previousAddresses = null
  spouse = null
  version = NaN

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.Person')
    address = null
    children = null
    id = NaN
    maritalStatus = null
    name = "Bob"
    previousAddresses = null
    spouse = null
    version = NaN

INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@55bf35e5, testMethod = persistNewEntityWithVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@25567581 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@179ee36b : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@67763ebe : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@4b4a2fa8 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@5da6b13d : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@3dc39459 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@6b16de91 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@71bb8b34 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@197ce367 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@383cdd4d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@65036e8d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@48ccbb32 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@36551e97 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@685d7ba5 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@16d41725 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@3b6c2be6 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@25533bba : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@26d0ece6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@100bba26 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@4ae280da : [expMonth, expYear, id, number, owner]
DEBUG: org.hibernate.SQL - insert into person (id, address, marital_status, name, spouse, version) values (null, ?, ?, ?, ?, ?)
DEBUG: org.hibernate.SQL - update person set address=?, marital_status=?, name=?, spouse=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@55bf35e5, testMethod = persistNewEntityWithVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@56c0a61e, testMethod = persistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2baf72d5]; rollback [true]
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@421ead7e : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@5dcf0772 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@c472300 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@5f6494c0 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@6826b70f : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@4df7d9ee : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@781dac73 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@3a4e524 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@5e67a490 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@2dac2e1b : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@38c761e9 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@1cee2e10 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@7f4e5a39 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@33de7f3d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@30159886 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@5d66ae3a : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@50f4b83d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@10131289 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@c5e69a5 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@64a1116a : [expMonth, expYear, id, number, owner]
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'email' on instance org.springframework.flex.hibernate4.domain.ContactInfo@11e17893 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'id' on instance org.springframework.flex.hibernate4.domain.ContactInfo@11e17893 is class java.lang.Integer
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'phone' on instance org.springframework.flex.hibernate4.domain.ContactInfo@11e17893 is class java.lang.String
DEBUG: org.springframework.flex.core.io.SpringPropertyProxy - Actual type of value for property 'version' on instance org.springframework.flex.hibernate4.domain.ContactInfo@11e17893 is class java.lang.Integer
DEBUG: org.hibernate.SQL - insert into contact_info (id, email, phone, version) values (null, ?, ?, ?)
DEBUG: org.hibernate.SQL - update contact_info set email=?, phone=?, version=? where id=? and version=?
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:
(Typed Object #0 'org.springframework.flex.hibernate4.domain.ContactInfo')
  email = "bob@foo.com"
  id = 0.0
  phone = "5555551234"
  version = -1.0

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

(Message #0 targetURI=, responseURI=)
  (Typed Object #0 'org.springframework.flex.hibernate4.domain.ContactInfo')
    email = "bob@foo.com"
    id = 0.0
    phone = "5555551234"
    version = -1.0

INFO : org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@40a1b6d4 testClass = SpringPropertyProxyHibernateJPATests, testInstance = org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests@56c0a61e, testMethod = persistNewEntityWithPrimitiveVersion@SpringPropertyProxyHibernateJPATests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b79c8ff testClass = SpringPropertyProxyHibernateJPATests, locations = '{classpath:/org/springframework/flex/hibernate4/hibernate-jpa-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@23648d2d : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@69feb4d9 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@37c1cfa : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@2bcda694 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@2cc75b25 : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@30036a18 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@537b3b2e : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@1544ded3 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@3ccb12d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@28b458e6 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@221ca495 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@119d4443 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@773eca84 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@7d47dfed : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@3a38e4dc : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@41fc0084 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@401788d5 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@3ec9f8d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@7e0f9528 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@5f56424d : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@4628a02b : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@2b01c689 : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@51424203 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@7336fd8f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@701c223a : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@550c973e : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@161d95c6 : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@5203c80f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@439f2d87 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@721bf7ad : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@852ef8d : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@44dd0d38 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@7e94e331 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@539fc5d1 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@4cae66a8 : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@60b616c8 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@3962ec84 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@147e0734 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@2bdab835 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@7b8aebd0 : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

INFO : org.springframework.flex.hibernate4.config.JpaHibernateConfigProcessor - Types detected for AMF serialization support: [class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes, class org.springframework.flex.hibernate4.domain.EmbeddedAddress, class org.springframework.flex.hibernate4.domain.Company, class org.springframework.flex.hibernate4.domain.BillingDetails, class org.springframework.flex.hibernate4.domain.EmbeddedAddressNP, class org.springframework.flex.hibernate4.domain.BankAccount, class org.springframework.flex.hibernate4.domain.Building, class org.springframework.flex.hibernate4.domain.Person, class org.springframework.flex.hibernate4.domain.BuildingNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorNP, class org.springframework.flex.hibernate4.domain.ContactInfoNP, class org.springframework.flex.hibernate4.domain.CompanyNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP, class org.springframework.flex.hibernate4.domain.EmbeddedFloor, class org.springframework.flex.hibernate4.domain.PersonNP, class org.springframework.flex.hibernate4.domain.ContactInfo, class org.springframework.flex.hibernate4.domain.Address, class org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP, class org.springframework.flex.hibernate4.domain.AddressNP, class org.springframework.flex.hibernate4.domain.PrimitiveCompany, class org.springframework.flex.hibernate4.domain.CreditCard]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributes@3181d4de : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddress@4f64d9cb : [city, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Company@639c7f9c : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedAddressNP@270d5060 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BankAccount@1815577b : [account, bankName, id, owner, swift]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Building@71567f33 : [address, floors, id]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Person@71369e1a : [address, children, id, maritalStatus, name, previousAddresses, spouse, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.BuildingNP@3cf55e0c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorNP@ee96866 : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfoNP@4c04216f : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CompanyNP@987a0bb : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloorAttributesNP@1f949ab9 : [emergencyExits]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.EmbeddedFloor@5a7b6b75 : [embeddedFloorAttributes, units]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PersonNP@3719360c : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.ContactInfo@3afca2c : [email, id, phone, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.Address@3855d9b2 : [city, id, moveInDate, rooms, state, street, zipcode]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompanyNP@39f42d0e : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.AddressNP@47a3d56a : []
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.PrimitiveCompany@3a209918 : [id, name, version]
DEBUG: org.springframework.flex.core.io.PropertyProxyUtils - Property names for org.springframework.flex.hibernate4.domain.CreditCard@2cae5fa7 : [expMonth, expYear, id, number, owner]
INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Serializer Trace:

INFO : org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests - Deserializer Trace:

Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.239 sec - in org.springframework.flex.hibernate4.SpringPropertyProxyHibernateJPATests
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@321ca237: startup date [Fri Mar 03 10:59:10 BRT 2017]; parent: org.springframework.web.context.support.GenericWebApplicationContext@b5de58f
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@b5de58f: startup date [Fri Mar 03 10:59:10 BRT 2017]; root of context hierarchy
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@38018b62: startup date [Fri Mar 03 10:59:09 BRT 2017]; root of context hierarchy
INFO : org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@6536e911: startup date [Fri Mar 03 10:59:07 BRT 2017]; root of context hierarchy
INFO : org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@151bf776: startup date [Fri Mar 03 10:59:09 BRT 2017]; parent: org.springframework.web.context.support.GenericWebApplicationContext@38018b62
INFO : org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@6a32191e: startup date [Fri Mar 03 10:59:10 BRT 2017]; root of context hierarchy
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
INFO : org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@12952aff: startup date [Fri Mar 03 10:59:11 BRT 2017]; root of context hierarchy
INFO : org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@4cc12db2: startup date [Fri Mar 03 10:59:11 BRT 2017]; root of context hierarchy
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
INFO : org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'

Results :

Tests run: 72, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5.952 s
[INFO] Finished at: 2017-03-03T10:59:11-03:00
[INFO] Final Memory: 12M/212M
[INFO] ------------------------------------------------------------------------
